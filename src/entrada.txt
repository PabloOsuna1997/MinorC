#llamadas
int global;

int suma(int a, int b){
    printf("la suma es %d \n", a+b);
}
int resta(int a, int b){
    printf("la resta es %d \n", a-b);
}
int multiplicacion(int a, int b){
    printf("la multiplicacion es %d \n", a*b);
}
int division(int a, int b){
    printf("la division es %d \n", a/b);
}

int main(){
    int a = 10, b = 20;    
    suma(5,3); 
    resta(5,3);
    multiplicacion(5,3);
    division(5,3);
    printf("a: %d b: %d \n", a, b);
}



augusTxtAuxVar
augusTxtCalls
augusTxtAuxJUMPS





int a ;

int main(struct nodo nodo){
    int a = 3, b = 1, x;

    if (x>0<20){
        a = a * 5;
    }else if (2 == 2){
        int c = 9;
    }else if (2 == 2){
        int c = 9;
    }else{
        b = 56;
    }
}


int main(){
    int a;
    switch(a){
        case 1:
            printf("a");
            break;
        case 2:
            printf("b");
            break;
        case 3:
            printf("c");
            break;
        case 4:
            printf("d");
            break;
        default:
            printf("no es ningina de las anteriores.");
            break;
    }
}




int main(){
    printf("\nIngrese un numero para iniciar:\n");
    int contador = scanf();
    printf("\nIngrese un numero para terminar:\n");
    int bandera = scanf();
    for(int i = contador; i<bandera ; i = i +1){
        printf("Hola i es %d \n", i);
    }
    printf("\nHemos contado desde %d hasta %d \n",contador,bandera);
}

int main()
{
int a;
    printf("PROBANDO CICLO FOR \n");
    for (int b = 0; b < 6; b++){
        if (b == 5){
            printf("Al fin encontre el 5 en el for \n");
        }else{
            for (int c = 0; c < 3; c++){
                printf("b: %d c: %d \n", b, c);
            }     
        }
    }
    printf("PROBANDO CICLO WHILE \n");
    int b = 0;
    while(b < 6){
        if (b == 5){
            printf("Al fin encontre el 5 en el while \n");
        }else{
            int c = 0;
            while(c < 3){
                printf("b: %d c: %d \n", b, c);
                c++;
            }     
        }
        b++;
    }
    printf("PROBANDO CICLO DO WHILE \n");
    b = 0;
    do{
        if (b == 5){
            printf("Al fin encontre el 5 en el do while \n");
        }else{
            int c = 0;
            do{
                printf("b: %d c: %d \n", b, c);
                c++;
            } while(c < 3);    
        }
        b++;
    }while(b < 6);
}



main:
$ra = -1; # 0 calls on stack
$s0 = array(); # Stack return values
$sp = -1;      # Null pointer
$t3 = 23;
$t4 = 17;
$a0 = $t3;
$a1 = $t4;
$ra = 0;
goto suma;
ends5:
$v6 = $s0[$sp];
$sp--;$t6 = $v6;
print("La ");
print("respuesta ");
print("es ");
print($t6);
print("\n ");
print("\n");$t3 = 43;
$t4 = 17;
$a0 = $t3;
$a1 = $t4;
$ra = 1;
goto suma;
ends9:
$v10 = $s0[$sp];
$sp--;$t10 = $v10;
print("La ");
print("respuesta ");
print("es ");
print($t10);
print("\n ");
print("\n");
goto finalaugus;

suma:
$t2 = $a0 + $a1;
$sp++;
$s0[$sp] = $t2;
goto rmanager;

rmanager:
# Administrador de retorno de funciones
if($ra == 0 ) goto ends5; 
if($ra == 1 ) goto ends9; 

finalaugus: