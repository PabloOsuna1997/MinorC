########################  MULTIPLES LLAMADAS 
int global = 10;

int suma(int a, int b){
    printf("la suma es %d \n", a+b);

    if (a == 6){    
        printf("exito la funcion recursiva sin return. \n"); 
    }else{       
    printf("es 5 \n");        
        ;
    }
}
int resta(int a, int b){
    printf("la resta es %d \n", a-b);
}
int multiplicacion(int a, int b){
    printf("la multiplicacion es %d \n", a*b);
}
int division(int a, int b){
    printf("la division es %d \n", a/b);
}

int main(){
    int a = 10, b = 20;    
    suma(5,3); 
    resta(5,3);
    multiplicacion(5,3);
    division(5,3);
    printf("a: %d b: %d \n", a, b);
}


##################################### FACTORIAL SIN LLAMADA
int main()
{
    int Resultado=0;
    int Factorial = 5;
    Resultado = 1;
    while(Factorial > 1) {
       Resultado *= Factorial;
       printf("%d x ",Factorial);
       Factorial--;
    }
    printf("1 = %d \n",Resultado);
}


##################################### FACTORIAL RECURSIVA
int resultado = 1;
int main(){
   int n;
   printf("FACTORIAL : Escribe un numero : ");
   n = scanf();
   factorial(n);
   printf("\n Resultado: %d \n", resultado);
}

int factorial(int n) {
    if(n > 1){
        return n*factorial(n-1); // Recursividad: n>1
    }
    //return 1; // Condiciï¿½n para n == 1 y n == 0 
}



#############################################   referencia recursivaa ######################################
int global = 10;

int actReferencia (int a ){
    if (a == 10){    
        printf("actualizando referencia a 10. \n");
    } else{       
        actReferencia(a+1);
    }
}



int main(){

    int c = 9, ref = 5; 
    int b = &c,a,f,d,e,f;
    c = 20;
    printf("b: %d \n", b);  
    actReferencia(&ref);
    printf("si funca paso por referencia %d \n", ref);
}

t0 0



############################################## FIBONACCI SIN RETURN
int actual;
int fibonacci(int posicion) {
    int siguiente = 1, temporal = 0;
    for (int x = 1; x <= posicion; x++) {
        printf("%d \n", actual);
        temporal = actual;
        actual = siguiente;
        siguiente = siguiente + temporal;
    }
    printf("%d", actual);
    printf("actual: %d", actual);
}

int main(){
    fibonacci(5);
}



######################################## IF ELSE
int a ;

int main(struct nodo nodo){
    int a = 3, b = 1, x;

    if (x>0<20){
        a = a * 5;
    }else if (2 == 2){
        int c = 9;
    }else if (2 == 2){
        int c = 9;
    }else{
        b = 56;
    }
}


############################################# SWITCH
int main(){
    int a;
    switch(a){
        case 1:
            printf("a");
            break;
        case 2:
            printf("b");
            break;
        case 3:
            printf("c");
            break;
        case 4:
            printf("d");
            break;
        default:
            printf("no es ningina de las anteriores.");
            break;
    }
}



########################################## SCANF 
int main(){
    printf("\nIngrese un numero para iniciar:\n");
    int contador = scanf();
    printf("\nIngrese un numero para terminar:\n");
    int bandera = scanf();
    for(int i = contador; i<bandera ; i = i +1){
        printf("Hola i es %d \n", i);
    }
    printf("\nHemos contado desde %d hasta %d \n",contador,bandera);
}



################################################ CICLOS
int main()
{
int a;
    printf("PROBANDO CICLO FOR \n");
    for (int b = 0; b < 6; b++){
        if (b == 5){
            printf("Al fin encontre el 5 en el for \n");
        }else{
            for (int c = 0; c < 3; c++){
                printf("b: %d c: %d \n", b, c);
            }     
        }
    }
    printf("PROBANDO CICLO WHILE \n");
    int b = 0;
    while(b < 6){
        if (b == 5){
            printf("Al fin encontre el 5 en el while \n");
        }else{
            int c = 0;
            while(c < 3){
                printf("b: %d c: %d \n", b, c);
                c++;
            }     
        }
        b++;
    }
    printf("PROBANDO CICLO DO WHILE \n");
    b = 0;
    do{
        if (b == 5){
            printf("Al fin encontre el 5 en el do while \n");
        }else{
            int c = 0;
            do{
                printf("b: %d c: %d \n", b, c);
                c++;
            } while(c < 3);    
        }
        b++;
    }while(b < 6);
}

