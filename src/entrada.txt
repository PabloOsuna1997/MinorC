#llamadas
int global = 10;

int suma(int a, int b){
    printf("la suma es %d \n", a+b);

    if (a == 6){    
        printf("exito la funcion recursiva sin return. \n"); 
    }else{       
    printf("es 5 \n");        
        ;
    }
}
int resta(int a, int b){
    printf("la resta es %d \n", a-b);
}
int multiplicacion(int a, int b){
    printf("la multiplicacion es %d \n", a*b);
}
int division(int a, int b){
    printf("la division es %d \n", a/b);
}

int main(){
    int a = 10, b = 20;    
    suma(5,3); 
    resta(5,3);
    multiplicacion(5,3);
    division(5,3);
    printf("a: %d b: %d \n", a, b);
}




int global = 10;

int suma(int a, int b){
    printf("la suma es %d \n", a+b);

    if (a == 6){    
        printf("SIMMM es 6 \n");
        suma(a+1,b); 
    }else if(a == 7){    
        printf("fin recursividad \n"); 
    } else{       
        printf("es 5 \n");        
        suma(a+1,b);
    }
}
int main(){
    int a = 10, b = 20;    
    suma(5,3); 

   printf("si funca");
}


int actual;
int fibonacci(int posicion) {
    int siguiente = 1, temporal = 0;
    for (int x = 1; x <= posicion; x++) {
        printf("%d \n", actual);
        temporal = actual;
        actual = siguiente;
        siguiente = siguiente + temporal;
    }
    printf("%d", actual);
    printf("actual: %d", actual);
}

int main(){
    fibonacci(5);
}



#include <stdio.h>
int main(int serie, char** fibonacci)
{ 
    int n, cont, a = 0, b = 1, c; 
    printf("Cuantos numeros quieres crear: ");
    scanf("%d", &n);  
    printf("0,1,"); 
    for(cont=0; cont<n-2; cont++){ 
        c = a + b; i 
        printf("%d,", c); 
        a = b; 
        b = c; 
    } 
    printf("n"); 
    return 5; 
}


CODIGO 3D:

main: 
PL_:
PL_:
$ra = -1;  #inicializamos nuesto apuntador de saltos
$a0 = 5 ;
$ra = 0;
goto fibonacci;
regreso0:
$ra = $ra + 1;
goto FINAL_AUGUS;
fibonacci :
$t0 = $a0 ;
$t1 = 0 ;
$t2 = 1 ;
$t3 = 0 ;
print(" 0,1, ");
$t4 = 0 ;
fL0:
$t5 = $t0 - 2 ;
$t6 = $t4 < $t5 ;
if($t6) goto fL1;
goto fL2;
fL1:
$t7 = $t1 + $t2 ;
$t3 = $t7 ;
print($t8);
print(" , ");
$t1 = $t2 ;
$t2 = $t8 ;
$t4 = $t4;
$t4 = $t4 + 1;
goto fL0;
fL2:
print(" n ");
goto manejador;


manejador:
if ( $ra == 0) goto regreso0;
FINAL_AUGUS:





















CODIGO 3D:

main: 
PL_:
PL_:
$t0 = 0 ;
$ra = -1;  #inicializamos nuesto apuntador de saltos
$t11 = 0 ;
$a0 = 5 ;
$a1 = 15 ;
$ra = 0;
goto fibonacci;
regreso0:
$ra = $ra + 1;
print(" fibonacci. ");
print("\n");
print($t0);
goto FINAL_AUGUS;
fibonacci :
$t1 = $a0 ;
$t2 = $a1 ;
$t3 = 1 ;
$t4 = 0 ;
$t5 = 1 ;
fL0:
$t6 = $t5 <= $t1 ;
if($t6) goto fL1;
goto fL2;
fL1:
if($t2) goto iL3;
goto iL4;
iL3:
print($t0);
print("\n");
iL4:
$t4 = $t0 ;
$t0 = $t3 ;
$t9 = $t3 + $t7 ;
$t3 = $t9 ;
$t5 = $t5;
$t5 = $t5 + 1;
goto fL0;
fL2:
if($t2) goto iL8;
goto iL9;
iL8:
print($t0);
iL9:
print(" actual: ");
print($t0);
goto manejador;


manejador:
if ( $ra == 0) goto regreso0;
FINAL_AUGUS:


manejador:
if ( $ra == 0) goto regreso0;
FINAL_AUGUS:


CODIGO 3D:

main: 
PL_:
PL_:
$t0 = 0 ;
$ra = -1;  #inicializamos nuesto apuntador de saltos
$t11 = 0 ;
$a0 = 5 ;
$a1 = 15 ;
$ra = 0;
goto fibonacci;
regreso0:
$ra = $ra + 1;
print(" fibonacci. ");
print("\n");
print($t0);
goto FINAL_AUGUS;
fibonacci :
$t1 = $a0 ;
$t2 = $a1 ;
$t3 = 1 ;
$t4 = 0 ;
$t5 = 1 ;
fL0:
$t6 = $t5 <= $t1 ;
if($t6) goto fL1;
goto fL2;
fL1:
if($t2) goto iL3;
goto iL4;
iL3:
print($t0);
print("\n");
iL4:
$t4 = $t0 ;
$t0 = $t3 ;
$t9 = $t3 + $t7 ;
$t3 = $t9 ;
$t5 = $t5;
$t5 = $t5 + 1;
goto fL0;
fL2:
if($t2) goto iL8;
goto iL9;
iL8:
print($t0);
iL9:
print(" actual: ");
print($t0);
goto manejador;


manejador:
if ( $ra == 0) goto regreso0;
FINAL_AUGUS:












int a ;

int main(struct nodo nodo){
    int a = 3, b = 1, x;

    if (x>0<20){
        a = a * 5;
    }else if (2 == 2){
        int c = 9;
    }else if (2 == 2){
        int c = 9;
    }else{
        b = 56;
    }
}


int main(){
    int a;
    switch(a){
        case 1:
            printf("a");
            break;
        case 2:
            printf("b");
            break;
        case 3:
            printf("c");
            break;
        case 4:
            printf("d");
            break;
        default:
            printf("no es ningina de las anteriores.");
            break;
    }
}




int main(){
    printf("\nIngrese un numero para iniciar:\n");
    int contador = scanf();
    printf("\nIngrese un numero para terminar:\n");
    int bandera = scanf();
    for(int i = contador; i<bandera ; i = i +1){
        printf("Hola i es %d \n", i);
    }
    printf("\nHemos contado desde %d hasta %d \n",contador,bandera);
}

int main()
{
int a;
    printf("PROBANDO CICLO FOR \n");
    for (int b = 0; b < 6; b++){
        if (b == 5){
            printf("Al fin encontre el 5 en el for \n");
        }else{
            for (int c = 0; c < 3; c++){
                printf("b: %d c: %d \n", b, c);
            }     
        }
    }
    printf("PROBANDO CICLO WHILE \n");
    int b = 0;
    while(b < 6){
        if (b == 5){
            printf("Al fin encontre el 5 en el while \n");
        }else{
            int c = 0;
            while(c < 3){
                printf("b: %d c: %d \n", b, c);
                c++;
            }     
        }
        b++;
    }
    printf("PROBANDO CICLO DO WHILE \n");
    b = 0;
    do{
        if (b == 5){
            printf("Al fin encontre el 5 en el do while \n");
        }else{
            int c = 0;
            do{
                printf("b: %d c: %d \n", b, c);
                c++;
            } while(c < 3);    
        }
        b++;
    }while(b < 6);
}



int fibonacci(int n){
     int a = 0, b = 1, c; 
    for(int cont=0; cont < n-2; cont++){
    c = a+b;
        printf("%d \n", c); 
    } 
    
}

int main()
{ 
    fibonacci(5);
}
