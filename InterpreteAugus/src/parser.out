Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DOLAR
    LLAVEDER
    LLAVEIZQ
    NUMERAL

Grammar

Rule 0     S' -> S
Rule 1     S -> A
Rule 2     A -> MAIN DOSPUNTOS SENTENCIAS
Rule 3     SENTENCIAS -> SENTENCIA SENTENCIAS_
Rule 4     SENTENCIAS_ -> SENTENCIA SENTENCIAS_
Rule 5     SENTENCIAS_ -> <empty>
Rule 6     SENTENCIA -> ETIQUETA
Rule 7     SENTENCIA -> INSTRUCCIONES
Rule 8     SENTENCIA -> DECLARACIONES
Rule 9     ETIQUETA -> LABEL error DOSPUNTOS
Rule 10    ETIQUETA -> LABEL DOSPUNTOS
Rule 11    INSTRUCCIONES -> PRINT PARIZQ error PARDER PUNTOCOMA
Rule 12    INSTRUCCIONES -> IF PARIZQ error PARDER GOTO LABEL PUNTOCOMA
Rule 13    INSTRUCCIONES -> UNSET PARIZQ error PARDER PUNTOCOMA
Rule 14    INSTRUCCIONES -> EXIT error PUNTOCOMA
Rule 15    INSTRUCCIONES -> GOTO error PUNTOCOMA
Rule 16    INSTRUCCIONES -> PRINT PARIZQ EXPRESION PARDER PUNTOCOMA
Rule 17    INSTRUCCIONES -> IF PARIZQ EXPRESION PARDER GOTO LABEL PUNTOCOMA
Rule 18    INSTRUCCIONES -> UNSET PARIZQ ID PARDER PUNTOCOMA
Rule 19    INSTRUCCIONES -> EXIT PUNTOCOMA
Rule 20    INSTRUCCIONES -> GOTO LABEL PUNTOCOMA
Rule 21    DECLARACIONES -> ID ARRAY_
Rule 22    ARRAY_ -> error IGUAL EXPRESION PUNTOCOMA
Rule 23    ARRAY_ -> CORCHETES IGUAL error PUNTOCOMA
Rule 24    ARRAY_ -> IGUAL error PUNTOCOMA
Rule 25    ARRAY_ -> CORCHETES IGUAL EXPRESION PUNTOCOMA
Rule 26    ARRAY_ -> IGUAL EXPRESION PUNTOCOMA
Rule 27    CORCHETES -> CORCHETE CORCHETES_
Rule 28    CORCHETES_ -> CORCHETE CORCHETES_
Rule 29    CORCHETES_ -> <empty>
Rule 30    CORCHETE -> CORIZQ F CORDER
Rule 31    EXPRESION -> ATOMICO
Rule 32    EXPRESION -> FUNCION
Rule 33    EXPRESION -> OPERACION
Rule 34    OPERACION -> F error F
Rule 35    OPERACION -> MENOS error
Rule 36    OPERACION -> NOTLOGICA error
Rule 37    OPERACION -> NOTBIT error
Rule 38    OPERACION -> ANDBIT error
Rule 39    OPERACION -> F OPERADOR F
Rule 40    OPERACION -> MENOS F
Rule 41    OPERACION -> NOTLOGICA F
Rule 42    OPERACION -> NOTBIT F
Rule 43    OPERACION -> ANDBIT F
Rule 44    ATOMICO -> F
Rule 45    FUNCION -> ABS PARIZQ EXPRESION PARDER
Rule 46    FUNCION -> READ PARIZQ PARDER
Rule 47    FUNCION -> PARIZQ TIPO PARDER ID
Rule 48    FUNCION -> ARRAY PARIZQ PARDER
Rule 49    OPERADOR -> MAS
Rule 50    OPERADOR -> MENOS
Rule 51    OPERADOR -> DIV
Rule 52    OPERADOR -> POR
Rule 53    OPERADOR -> MODULO
Rule 54    OPERADOR -> AND
Rule 55    OPERADOR -> OR
Rule 56    OPERADOR -> XOR
Rule 57    OPERADOR -> IGUALQUE
Rule 58    OPERADOR -> DIFERENTE
Rule 59    OPERADOR -> MAYORIGUAL
Rule 60    OPERADOR -> MENORIGUAL
Rule 61    OPERADOR -> MAYORQUE
Rule 62    OPERADOR -> MENORQUE
Rule 63    OPERADOR -> ANDBIT
Rule 64    OPERADOR -> ORBIT
Rule 65    OPERADOR -> XORBIT
Rule 66    OPERADOR -> SHIFTIZQ
Rule 67    OPERADOR -> SHIFTDER
Rule 68    TIPO -> INT
Rule 69    TIPO -> FLOAT
Rule 70    TIPO -> CHAR
Rule 71    F -> NUMERO
Rule 72    F -> ID
Rule 73    F -> ID CORCHETES
Rule 74    F -> CADENA
Rule 75    F -> CHAR_

Terminals, with rules where they appear

ABS                  : 45
AND                  : 54
ANDBIT               : 38 43 63
ARRAY                : 48
CADENA               : 74
CHAR                 : 70
CHAR_                : 75
CORDER               : 30
CORIZQ               : 30
DIFERENTE            : 58
DIV                  : 51
DOLAR                : 
DOSPUNTOS            : 2 9 10
EXIT                 : 14 19
FLOAT                : 69
GOTO                 : 12 15 17 20
ID                   : 18 21 47 72 73
IF                   : 12 17
IGUAL                : 22 23 24 25 26
IGUALQUE             : 57
INT                  : 68
LABEL                : 9 10 12 17 20
LLAVEDER             : 
LLAVEIZQ             : 
MAIN                 : 2
MAS                  : 49
MAYORIGUAL           : 59
MAYORQUE             : 61
MENORIGUAL           : 60
MENORQUE             : 62
MENOS                : 35 40 50
MODULO               : 53
NOTBIT               : 37 42
NOTLOGICA            : 36 41
NUMERAL              : 
NUMERO               : 71
OR                   : 55
ORBIT                : 64
PARDER               : 11 12 13 16 17 18 45 46 47 48
PARIZQ               : 11 12 13 16 17 18 45 46 47 48
POR                  : 52
PRINT                : 11 16
PUNTOCOMA            : 11 12 13 14 15 16 17 18 19 20 22 23 24 25 26
READ                 : 46
SHIFTDER             : 67
SHIFTIZQ             : 66
UNSET                : 13 18
XOR                  : 56
XORBIT               : 65
error                : 9 11 12 13 14 15 22 23 24 34 35 36 37 38

Nonterminals, with rules where they appear

A                    : 1
ARRAY_               : 21
ATOMICO              : 31
CORCHETE             : 27 28
CORCHETES            : 23 25 73
CORCHETES_           : 27 28
DECLARACIONES        : 8
ETIQUETA             : 6
EXPRESION            : 16 17 22 25 26 45
F                    : 30 34 34 39 39 40 41 42 43 44
FUNCION              : 32
INSTRUCCIONES        : 7
OPERACION            : 33
OPERADOR             : 39
S                    : 0
SENTENCIA            : 3 4
SENTENCIAS           : 2
SENTENCIAS_          : 3 4
TIPO                 : 47

Parsing method: LALR

state 0

    (0) S' -> . S
    (1) S -> . A
    (2) A -> . MAIN DOSPUNTOS SENTENCIAS

    MAIN            shift and go to state 3

    S                              shift and go to state 1
    A                              shift and go to state 2

state 1

    (0) S' -> S .



state 2

    (1) S -> A .

    $end            reduce using rule 1 (S -> A .)


state 3

    (2) A -> MAIN . DOSPUNTOS SENTENCIAS

    DOSPUNTOS       shift and go to state 4


state 4

    (2) A -> MAIN DOSPUNTOS . SENTENCIAS
    (3) SENTENCIAS -> . SENTENCIA SENTENCIAS_
    (6) SENTENCIA -> . ETIQUETA
    (7) SENTENCIA -> . INSTRUCCIONES
    (8) SENTENCIA -> . DECLARACIONES
    (9) ETIQUETA -> . LABEL error DOSPUNTOS
    (10) ETIQUETA -> . LABEL DOSPUNTOS
    (11) INSTRUCCIONES -> . PRINT PARIZQ error PARDER PUNTOCOMA
    (12) INSTRUCCIONES -> . IF PARIZQ error PARDER GOTO LABEL PUNTOCOMA
    (13) INSTRUCCIONES -> . UNSET PARIZQ error PARDER PUNTOCOMA
    (14) INSTRUCCIONES -> . EXIT error PUNTOCOMA
    (15) INSTRUCCIONES -> . GOTO error PUNTOCOMA
    (16) INSTRUCCIONES -> . PRINT PARIZQ EXPRESION PARDER PUNTOCOMA
    (17) INSTRUCCIONES -> . IF PARIZQ EXPRESION PARDER GOTO LABEL PUNTOCOMA
    (18) INSTRUCCIONES -> . UNSET PARIZQ ID PARDER PUNTOCOMA
    (19) INSTRUCCIONES -> . EXIT PUNTOCOMA
    (20) INSTRUCCIONES -> . GOTO LABEL PUNTOCOMA
    (21) DECLARACIONES -> . ID ARRAY_

    LABEL           shift and go to state 10
    PRINT           shift and go to state 11
    IF              shift and go to state 12
    UNSET           shift and go to state 14
    EXIT            shift and go to state 15
    GOTO            shift and go to state 13
    ID              shift and go to state 16

    SENTENCIAS                     shift and go to state 5
    SENTENCIA                      shift and go to state 6
    ETIQUETA                       shift and go to state 7
    INSTRUCCIONES                  shift and go to state 8
    DECLARACIONES                  shift and go to state 9

state 5

    (2) A -> MAIN DOSPUNTOS SENTENCIAS .

    $end            reduce using rule 2 (A -> MAIN DOSPUNTOS SENTENCIAS .)


state 6

    (3) SENTENCIAS -> SENTENCIA . SENTENCIAS_
    (4) SENTENCIAS_ -> . SENTENCIA SENTENCIAS_
    (5) SENTENCIAS_ -> .
    (6) SENTENCIA -> . ETIQUETA
    (7) SENTENCIA -> . INSTRUCCIONES
    (8) SENTENCIA -> . DECLARACIONES
    (9) ETIQUETA -> . LABEL error DOSPUNTOS
    (10) ETIQUETA -> . LABEL DOSPUNTOS
    (11) INSTRUCCIONES -> . PRINT PARIZQ error PARDER PUNTOCOMA
    (12) INSTRUCCIONES -> . IF PARIZQ error PARDER GOTO LABEL PUNTOCOMA
    (13) INSTRUCCIONES -> . UNSET PARIZQ error PARDER PUNTOCOMA
    (14) INSTRUCCIONES -> . EXIT error PUNTOCOMA
    (15) INSTRUCCIONES -> . GOTO error PUNTOCOMA
    (16) INSTRUCCIONES -> . PRINT PARIZQ EXPRESION PARDER PUNTOCOMA
    (17) INSTRUCCIONES -> . IF PARIZQ EXPRESION PARDER GOTO LABEL PUNTOCOMA
    (18) INSTRUCCIONES -> . UNSET PARIZQ ID PARDER PUNTOCOMA
    (19) INSTRUCCIONES -> . EXIT PUNTOCOMA
    (20) INSTRUCCIONES -> . GOTO LABEL PUNTOCOMA
    (21) DECLARACIONES -> . ID ARRAY_

    $end            reduce using rule 5 (SENTENCIAS_ -> .)
    LABEL           shift and go to state 10
    PRINT           shift and go to state 11
    IF              shift and go to state 12
    UNSET           shift and go to state 14
    EXIT            shift and go to state 15
    GOTO            shift and go to state 13
    ID              shift and go to state 16

    SENTENCIA                      shift and go to state 17
    SENTENCIAS_                    shift and go to state 18
    ETIQUETA                       shift and go to state 7
    INSTRUCCIONES                  shift and go to state 8
    DECLARACIONES                  shift and go to state 9

state 7

    (6) SENTENCIA -> ETIQUETA .

    LABEL           reduce using rule 6 (SENTENCIA -> ETIQUETA .)
    PRINT           reduce using rule 6 (SENTENCIA -> ETIQUETA .)
    IF              reduce using rule 6 (SENTENCIA -> ETIQUETA .)
    UNSET           reduce using rule 6 (SENTENCIA -> ETIQUETA .)
    EXIT            reduce using rule 6 (SENTENCIA -> ETIQUETA .)
    GOTO            reduce using rule 6 (SENTENCIA -> ETIQUETA .)
    ID              reduce using rule 6 (SENTENCIA -> ETIQUETA .)
    $end            reduce using rule 6 (SENTENCIA -> ETIQUETA .)


state 8

    (7) SENTENCIA -> INSTRUCCIONES .

    LABEL           reduce using rule 7 (SENTENCIA -> INSTRUCCIONES .)
    PRINT           reduce using rule 7 (SENTENCIA -> INSTRUCCIONES .)
    IF              reduce using rule 7 (SENTENCIA -> INSTRUCCIONES .)
    UNSET           reduce using rule 7 (SENTENCIA -> INSTRUCCIONES .)
    EXIT            reduce using rule 7 (SENTENCIA -> INSTRUCCIONES .)
    GOTO            reduce using rule 7 (SENTENCIA -> INSTRUCCIONES .)
    ID              reduce using rule 7 (SENTENCIA -> INSTRUCCIONES .)
    $end            reduce using rule 7 (SENTENCIA -> INSTRUCCIONES .)


state 9

    (8) SENTENCIA -> DECLARACIONES .

    LABEL           reduce using rule 8 (SENTENCIA -> DECLARACIONES .)
    PRINT           reduce using rule 8 (SENTENCIA -> DECLARACIONES .)
    IF              reduce using rule 8 (SENTENCIA -> DECLARACIONES .)
    UNSET           reduce using rule 8 (SENTENCIA -> DECLARACIONES .)
    EXIT            reduce using rule 8 (SENTENCIA -> DECLARACIONES .)
    GOTO            reduce using rule 8 (SENTENCIA -> DECLARACIONES .)
    ID              reduce using rule 8 (SENTENCIA -> DECLARACIONES .)
    $end            reduce using rule 8 (SENTENCIA -> DECLARACIONES .)


state 10

    (9) ETIQUETA -> LABEL . error DOSPUNTOS
    (10) ETIQUETA -> LABEL . DOSPUNTOS

    error           shift and go to state 19
    DOSPUNTOS       shift and go to state 20


state 11

    (11) INSTRUCCIONES -> PRINT . PARIZQ error PARDER PUNTOCOMA
    (16) INSTRUCCIONES -> PRINT . PARIZQ EXPRESION PARDER PUNTOCOMA

    PARIZQ          shift and go to state 21


state 12

    (12) INSTRUCCIONES -> IF . PARIZQ error PARDER GOTO LABEL PUNTOCOMA
    (17) INSTRUCCIONES -> IF . PARIZQ EXPRESION PARDER GOTO LABEL PUNTOCOMA

    PARIZQ          shift and go to state 22


state 13

    (15) INSTRUCCIONES -> GOTO . error PUNTOCOMA
    (20) INSTRUCCIONES -> GOTO . LABEL PUNTOCOMA

    error           shift and go to state 23
    LABEL           shift and go to state 24


state 14

    (13) INSTRUCCIONES -> UNSET . PARIZQ error PARDER PUNTOCOMA
    (18) INSTRUCCIONES -> UNSET . PARIZQ ID PARDER PUNTOCOMA

    PARIZQ          shift and go to state 25


state 15

    (14) INSTRUCCIONES -> EXIT . error PUNTOCOMA
    (19) INSTRUCCIONES -> EXIT . PUNTOCOMA

    error           shift and go to state 26
    PUNTOCOMA       shift and go to state 27


state 16

    (21) DECLARACIONES -> ID . ARRAY_
    (22) ARRAY_ -> . error IGUAL EXPRESION PUNTOCOMA
    (23) ARRAY_ -> . CORCHETES IGUAL error PUNTOCOMA
    (24) ARRAY_ -> . IGUAL error PUNTOCOMA
    (25) ARRAY_ -> . CORCHETES IGUAL EXPRESION PUNTOCOMA
    (26) ARRAY_ -> . IGUAL EXPRESION PUNTOCOMA
    (27) CORCHETES -> . CORCHETE CORCHETES_
    (30) CORCHETE -> . CORIZQ F CORDER

    error           shift and go to state 29
    IGUAL           shift and go to state 30
    CORIZQ          shift and go to state 33

    ARRAY_                         shift and go to state 28
    CORCHETES                      shift and go to state 31
    CORCHETE                       shift and go to state 32

state 17

    (4) SENTENCIAS_ -> SENTENCIA . SENTENCIAS_
    (4) SENTENCIAS_ -> . SENTENCIA SENTENCIAS_
    (5) SENTENCIAS_ -> .
    (6) SENTENCIA -> . ETIQUETA
    (7) SENTENCIA -> . INSTRUCCIONES
    (8) SENTENCIA -> . DECLARACIONES
    (9) ETIQUETA -> . LABEL error DOSPUNTOS
    (10) ETIQUETA -> . LABEL DOSPUNTOS
    (11) INSTRUCCIONES -> . PRINT PARIZQ error PARDER PUNTOCOMA
    (12) INSTRUCCIONES -> . IF PARIZQ error PARDER GOTO LABEL PUNTOCOMA
    (13) INSTRUCCIONES -> . UNSET PARIZQ error PARDER PUNTOCOMA
    (14) INSTRUCCIONES -> . EXIT error PUNTOCOMA
    (15) INSTRUCCIONES -> . GOTO error PUNTOCOMA
    (16) INSTRUCCIONES -> . PRINT PARIZQ EXPRESION PARDER PUNTOCOMA
    (17) INSTRUCCIONES -> . IF PARIZQ EXPRESION PARDER GOTO LABEL PUNTOCOMA
    (18) INSTRUCCIONES -> . UNSET PARIZQ ID PARDER PUNTOCOMA
    (19) INSTRUCCIONES -> . EXIT PUNTOCOMA
    (20) INSTRUCCIONES -> . GOTO LABEL PUNTOCOMA
    (21) DECLARACIONES -> . ID ARRAY_

    $end            reduce using rule 5 (SENTENCIAS_ -> .)
    LABEL           shift and go to state 10
    PRINT           shift and go to state 11
    IF              shift and go to state 12
    UNSET           shift and go to state 14
    EXIT            shift and go to state 15
    GOTO            shift and go to state 13
    ID              shift and go to state 16

    SENTENCIA                      shift and go to state 17
    SENTENCIAS_                    shift and go to state 34
    ETIQUETA                       shift and go to state 7
    INSTRUCCIONES                  shift and go to state 8
    DECLARACIONES                  shift and go to state 9

state 18

    (3) SENTENCIAS -> SENTENCIA SENTENCIAS_ .

    $end            reduce using rule 3 (SENTENCIAS -> SENTENCIA SENTENCIAS_ .)


state 19

    (9) ETIQUETA -> LABEL error . DOSPUNTOS

    DOSPUNTOS       shift and go to state 35


state 20

    (10) ETIQUETA -> LABEL DOSPUNTOS .

    LABEL           reduce using rule 10 (ETIQUETA -> LABEL DOSPUNTOS .)
    PRINT           reduce using rule 10 (ETIQUETA -> LABEL DOSPUNTOS .)
    IF              reduce using rule 10 (ETIQUETA -> LABEL DOSPUNTOS .)
    UNSET           reduce using rule 10 (ETIQUETA -> LABEL DOSPUNTOS .)
    EXIT            reduce using rule 10 (ETIQUETA -> LABEL DOSPUNTOS .)
    GOTO            reduce using rule 10 (ETIQUETA -> LABEL DOSPUNTOS .)
    ID              reduce using rule 10 (ETIQUETA -> LABEL DOSPUNTOS .)
    $end            reduce using rule 10 (ETIQUETA -> LABEL DOSPUNTOS .)


state 21

    (11) INSTRUCCIONES -> PRINT PARIZQ . error PARDER PUNTOCOMA
    (16) INSTRUCCIONES -> PRINT PARIZQ . EXPRESION PARDER PUNTOCOMA
    (31) EXPRESION -> . ATOMICO
    (32) EXPRESION -> . FUNCION
    (33) EXPRESION -> . OPERACION
    (44) ATOMICO -> . F
    (45) FUNCION -> . ABS PARIZQ EXPRESION PARDER
    (46) FUNCION -> . READ PARIZQ PARDER
    (47) FUNCION -> . PARIZQ TIPO PARDER ID
    (48) FUNCION -> . ARRAY PARIZQ PARDER
    (34) OPERACION -> . F error F
    (35) OPERACION -> . MENOS error
    (36) OPERACION -> . NOTLOGICA error
    (37) OPERACION -> . NOTBIT error
    (38) OPERACION -> . ANDBIT error
    (39) OPERACION -> . F OPERADOR F
    (40) OPERACION -> . MENOS F
    (41) OPERACION -> . NOTLOGICA F
    (42) OPERACION -> . NOTBIT F
    (43) OPERACION -> . ANDBIT F
    (71) F -> . NUMERO
    (72) F -> . ID
    (73) F -> . ID CORCHETES
    (74) F -> . CADENA
    (75) F -> . CHAR_

    error           shift and go to state 37
    ABS             shift and go to state 43
    READ            shift and go to state 44
    PARIZQ          shift and go to state 36
    ARRAY           shift and go to state 46
    MENOS           shift and go to state 47
    NOTLOGICA       shift and go to state 48
    NOTBIT          shift and go to state 49
    ANDBIT          shift and go to state 50
    NUMERO          shift and go to state 51
    ID              shift and go to state 45
    CADENA          shift and go to state 52
    CHAR_           shift and go to state 53

    EXPRESION                      shift and go to state 38
    ATOMICO                        shift and go to state 39
    FUNCION                        shift and go to state 40
    OPERACION                      shift and go to state 41
    F                              shift and go to state 42

state 22

    (12) INSTRUCCIONES -> IF PARIZQ . error PARDER GOTO LABEL PUNTOCOMA
    (17) INSTRUCCIONES -> IF PARIZQ . EXPRESION PARDER GOTO LABEL PUNTOCOMA
    (31) EXPRESION -> . ATOMICO
    (32) EXPRESION -> . FUNCION
    (33) EXPRESION -> . OPERACION
    (44) ATOMICO -> . F
    (45) FUNCION -> . ABS PARIZQ EXPRESION PARDER
    (46) FUNCION -> . READ PARIZQ PARDER
    (47) FUNCION -> . PARIZQ TIPO PARDER ID
    (48) FUNCION -> . ARRAY PARIZQ PARDER
    (34) OPERACION -> . F error F
    (35) OPERACION -> . MENOS error
    (36) OPERACION -> . NOTLOGICA error
    (37) OPERACION -> . NOTBIT error
    (38) OPERACION -> . ANDBIT error
    (39) OPERACION -> . F OPERADOR F
    (40) OPERACION -> . MENOS F
    (41) OPERACION -> . NOTLOGICA F
    (42) OPERACION -> . NOTBIT F
    (43) OPERACION -> . ANDBIT F
    (71) F -> . NUMERO
    (72) F -> . ID
    (73) F -> . ID CORCHETES
    (74) F -> . CADENA
    (75) F -> . CHAR_

    error           shift and go to state 54
    ABS             shift and go to state 43
    READ            shift and go to state 44
    PARIZQ          shift and go to state 36
    ARRAY           shift and go to state 46
    MENOS           shift and go to state 47
    NOTLOGICA       shift and go to state 48
    NOTBIT          shift and go to state 49
    ANDBIT          shift and go to state 50
    NUMERO          shift and go to state 51
    ID              shift and go to state 45
    CADENA          shift and go to state 52
    CHAR_           shift and go to state 53

    EXPRESION                      shift and go to state 55
    ATOMICO                        shift and go to state 39
    FUNCION                        shift and go to state 40
    OPERACION                      shift and go to state 41
    F                              shift and go to state 42

state 23

    (15) INSTRUCCIONES -> GOTO error . PUNTOCOMA

    PUNTOCOMA       shift and go to state 56


state 24

    (20) INSTRUCCIONES -> GOTO LABEL . PUNTOCOMA

    PUNTOCOMA       shift and go to state 57


state 25

    (13) INSTRUCCIONES -> UNSET PARIZQ . error PARDER PUNTOCOMA
    (18) INSTRUCCIONES -> UNSET PARIZQ . ID PARDER PUNTOCOMA

    error           shift and go to state 58
    ID              shift and go to state 59


state 26

    (14) INSTRUCCIONES -> EXIT error . PUNTOCOMA

    PUNTOCOMA       shift and go to state 60


state 27

    (19) INSTRUCCIONES -> EXIT PUNTOCOMA .

    LABEL           reduce using rule 19 (INSTRUCCIONES -> EXIT PUNTOCOMA .)
    PRINT           reduce using rule 19 (INSTRUCCIONES -> EXIT PUNTOCOMA .)
    IF              reduce using rule 19 (INSTRUCCIONES -> EXIT PUNTOCOMA .)
    UNSET           reduce using rule 19 (INSTRUCCIONES -> EXIT PUNTOCOMA .)
    EXIT            reduce using rule 19 (INSTRUCCIONES -> EXIT PUNTOCOMA .)
    GOTO            reduce using rule 19 (INSTRUCCIONES -> EXIT PUNTOCOMA .)
    ID              reduce using rule 19 (INSTRUCCIONES -> EXIT PUNTOCOMA .)
    $end            reduce using rule 19 (INSTRUCCIONES -> EXIT PUNTOCOMA .)


state 28

    (21) DECLARACIONES -> ID ARRAY_ .

    LABEL           reduce using rule 21 (DECLARACIONES -> ID ARRAY_ .)
    PRINT           reduce using rule 21 (DECLARACIONES -> ID ARRAY_ .)
    IF              reduce using rule 21 (DECLARACIONES -> ID ARRAY_ .)
    UNSET           reduce using rule 21 (DECLARACIONES -> ID ARRAY_ .)
    EXIT            reduce using rule 21 (DECLARACIONES -> ID ARRAY_ .)
    GOTO            reduce using rule 21 (DECLARACIONES -> ID ARRAY_ .)
    ID              reduce using rule 21 (DECLARACIONES -> ID ARRAY_ .)
    $end            reduce using rule 21 (DECLARACIONES -> ID ARRAY_ .)


state 29

    (22) ARRAY_ -> error . IGUAL EXPRESION PUNTOCOMA

    IGUAL           shift and go to state 61


state 30

    (24) ARRAY_ -> IGUAL . error PUNTOCOMA
    (26) ARRAY_ -> IGUAL . EXPRESION PUNTOCOMA
    (31) EXPRESION -> . ATOMICO
    (32) EXPRESION -> . FUNCION
    (33) EXPRESION -> . OPERACION
    (44) ATOMICO -> . F
    (45) FUNCION -> . ABS PARIZQ EXPRESION PARDER
    (46) FUNCION -> . READ PARIZQ PARDER
    (47) FUNCION -> . PARIZQ TIPO PARDER ID
    (48) FUNCION -> . ARRAY PARIZQ PARDER
    (34) OPERACION -> . F error F
    (35) OPERACION -> . MENOS error
    (36) OPERACION -> . NOTLOGICA error
    (37) OPERACION -> . NOTBIT error
    (38) OPERACION -> . ANDBIT error
    (39) OPERACION -> . F OPERADOR F
    (40) OPERACION -> . MENOS F
    (41) OPERACION -> . NOTLOGICA F
    (42) OPERACION -> . NOTBIT F
    (43) OPERACION -> . ANDBIT F
    (71) F -> . NUMERO
    (72) F -> . ID
    (73) F -> . ID CORCHETES
    (74) F -> . CADENA
    (75) F -> . CHAR_

    error           shift and go to state 62
    ABS             shift and go to state 43
    READ            shift and go to state 44
    PARIZQ          shift and go to state 36
    ARRAY           shift and go to state 46
    MENOS           shift and go to state 47
    NOTLOGICA       shift and go to state 48
    NOTBIT          shift and go to state 49
    ANDBIT          shift and go to state 50
    NUMERO          shift and go to state 51
    ID              shift and go to state 45
    CADENA          shift and go to state 52
    CHAR_           shift and go to state 53

    EXPRESION                      shift and go to state 63
    ATOMICO                        shift and go to state 39
    FUNCION                        shift and go to state 40
    OPERACION                      shift and go to state 41
    F                              shift and go to state 42

state 31

    (23) ARRAY_ -> CORCHETES . IGUAL error PUNTOCOMA
    (25) ARRAY_ -> CORCHETES . IGUAL EXPRESION PUNTOCOMA

    IGUAL           shift and go to state 64


state 32

    (27) CORCHETES -> CORCHETE . CORCHETES_
    (28) CORCHETES_ -> . CORCHETE CORCHETES_
    (29) CORCHETES_ -> .
    (30) CORCHETE -> . CORIZQ F CORDER

    IGUAL           reduce using rule 29 (CORCHETES_ -> .)
    error           reduce using rule 29 (CORCHETES_ -> .)
    MAS             reduce using rule 29 (CORCHETES_ -> .)
    MENOS           reduce using rule 29 (CORCHETES_ -> .)
    DIV             reduce using rule 29 (CORCHETES_ -> .)
    POR             reduce using rule 29 (CORCHETES_ -> .)
    MODULO          reduce using rule 29 (CORCHETES_ -> .)
    AND             reduce using rule 29 (CORCHETES_ -> .)
    OR              reduce using rule 29 (CORCHETES_ -> .)
    XOR             reduce using rule 29 (CORCHETES_ -> .)
    IGUALQUE        reduce using rule 29 (CORCHETES_ -> .)
    DIFERENTE       reduce using rule 29 (CORCHETES_ -> .)
    MAYORIGUAL      reduce using rule 29 (CORCHETES_ -> .)
    MENORIGUAL      reduce using rule 29 (CORCHETES_ -> .)
    MAYORQUE        reduce using rule 29 (CORCHETES_ -> .)
    MENORQUE        reduce using rule 29 (CORCHETES_ -> .)
    ANDBIT          reduce using rule 29 (CORCHETES_ -> .)
    ORBIT           reduce using rule 29 (CORCHETES_ -> .)
    XORBIT          reduce using rule 29 (CORCHETES_ -> .)
    SHIFTIZQ        reduce using rule 29 (CORCHETES_ -> .)
    SHIFTDER        reduce using rule 29 (CORCHETES_ -> .)
    PARDER          reduce using rule 29 (CORCHETES_ -> .)
    PUNTOCOMA       reduce using rule 29 (CORCHETES_ -> .)
    CORDER          reduce using rule 29 (CORCHETES_ -> .)
    CORIZQ          shift and go to state 33

    CORCHETE                       shift and go to state 65
    CORCHETES_                     shift and go to state 66

state 33

    (30) CORCHETE -> CORIZQ . F CORDER
    (71) F -> . NUMERO
    (72) F -> . ID
    (73) F -> . ID CORCHETES
    (74) F -> . CADENA
    (75) F -> . CHAR_

    NUMERO          shift and go to state 51
    ID              shift and go to state 45
    CADENA          shift and go to state 52
    CHAR_           shift and go to state 53

    F                              shift and go to state 67

state 34

    (4) SENTENCIAS_ -> SENTENCIA SENTENCIAS_ .

    $end            reduce using rule 4 (SENTENCIAS_ -> SENTENCIA SENTENCIAS_ .)


state 35

    (9) ETIQUETA -> LABEL error DOSPUNTOS .

    LABEL           reduce using rule 9 (ETIQUETA -> LABEL error DOSPUNTOS .)
    PRINT           reduce using rule 9 (ETIQUETA -> LABEL error DOSPUNTOS .)
    IF              reduce using rule 9 (ETIQUETA -> LABEL error DOSPUNTOS .)
    UNSET           reduce using rule 9 (ETIQUETA -> LABEL error DOSPUNTOS .)
    EXIT            reduce using rule 9 (ETIQUETA -> LABEL error DOSPUNTOS .)
    GOTO            reduce using rule 9 (ETIQUETA -> LABEL error DOSPUNTOS .)
    ID              reduce using rule 9 (ETIQUETA -> LABEL error DOSPUNTOS .)
    $end            reduce using rule 9 (ETIQUETA -> LABEL error DOSPUNTOS .)


state 36

    (47) FUNCION -> PARIZQ . TIPO PARDER ID
    (68) TIPO -> . INT
    (69) TIPO -> . FLOAT
    (70) TIPO -> . CHAR

    INT             shift and go to state 69
    FLOAT           shift and go to state 70
    CHAR            shift and go to state 71

    TIPO                           shift and go to state 68

state 37

    (11) INSTRUCCIONES -> PRINT PARIZQ error . PARDER PUNTOCOMA

    PARDER          shift and go to state 72


state 38

    (16) INSTRUCCIONES -> PRINT PARIZQ EXPRESION . PARDER PUNTOCOMA

    PARDER          shift and go to state 73


state 39

    (31) EXPRESION -> ATOMICO .

    PARDER          reduce using rule 31 (EXPRESION -> ATOMICO .)
    PUNTOCOMA       reduce using rule 31 (EXPRESION -> ATOMICO .)


state 40

    (32) EXPRESION -> FUNCION .

    PARDER          reduce using rule 32 (EXPRESION -> FUNCION .)
    PUNTOCOMA       reduce using rule 32 (EXPRESION -> FUNCION .)


state 41

    (33) EXPRESION -> OPERACION .

    PARDER          reduce using rule 33 (EXPRESION -> OPERACION .)
    PUNTOCOMA       reduce using rule 33 (EXPRESION -> OPERACION .)


state 42

    (44) ATOMICO -> F .
    (34) OPERACION -> F . error F
    (39) OPERACION -> F . OPERADOR F
    (49) OPERADOR -> . MAS
    (50) OPERADOR -> . MENOS
    (51) OPERADOR -> . DIV
    (52) OPERADOR -> . POR
    (53) OPERADOR -> . MODULO
    (54) OPERADOR -> . AND
    (55) OPERADOR -> . OR
    (56) OPERADOR -> . XOR
    (57) OPERADOR -> . IGUALQUE
    (58) OPERADOR -> . DIFERENTE
    (59) OPERADOR -> . MAYORIGUAL
    (60) OPERADOR -> . MENORIGUAL
    (61) OPERADOR -> . MAYORQUE
    (62) OPERADOR -> . MENORQUE
    (63) OPERADOR -> . ANDBIT
    (64) OPERADOR -> . ORBIT
    (65) OPERADOR -> . XORBIT
    (66) OPERADOR -> . SHIFTIZQ
    (67) OPERADOR -> . SHIFTDER

    PARDER          reduce using rule 44 (ATOMICO -> F .)
    PUNTOCOMA       reduce using rule 44 (ATOMICO -> F .)
    error           shift and go to state 74
    MAS             shift and go to state 76
    MENOS           shift and go to state 77
    DIV             shift and go to state 78
    POR             shift and go to state 79
    MODULO          shift and go to state 80
    AND             shift and go to state 81
    OR              shift and go to state 82
    XOR             shift and go to state 83
    IGUALQUE        shift and go to state 84
    DIFERENTE       shift and go to state 85
    MAYORIGUAL      shift and go to state 86
    MENORIGUAL      shift and go to state 87
    MAYORQUE        shift and go to state 88
    MENORQUE        shift and go to state 89
    ANDBIT          shift and go to state 90
    ORBIT           shift and go to state 91
    XORBIT          shift and go to state 92
    SHIFTIZQ        shift and go to state 93
    SHIFTDER        shift and go to state 94

    OPERADOR                       shift and go to state 75

state 43

    (45) FUNCION -> ABS . PARIZQ EXPRESION PARDER

    PARIZQ          shift and go to state 95


state 44

    (46) FUNCION -> READ . PARIZQ PARDER

    PARIZQ          shift and go to state 96


state 45

    (72) F -> ID .
    (73) F -> ID . CORCHETES
    (27) CORCHETES -> . CORCHETE CORCHETES_
    (30) CORCHETE -> . CORIZQ F CORDER

    error           reduce using rule 72 (F -> ID .)
    MAS             reduce using rule 72 (F -> ID .)
    MENOS           reduce using rule 72 (F -> ID .)
    DIV             reduce using rule 72 (F -> ID .)
    POR             reduce using rule 72 (F -> ID .)
    MODULO          reduce using rule 72 (F -> ID .)
    AND             reduce using rule 72 (F -> ID .)
    OR              reduce using rule 72 (F -> ID .)
    XOR             reduce using rule 72 (F -> ID .)
    IGUALQUE        reduce using rule 72 (F -> ID .)
    DIFERENTE       reduce using rule 72 (F -> ID .)
    MAYORIGUAL      reduce using rule 72 (F -> ID .)
    MENORIGUAL      reduce using rule 72 (F -> ID .)
    MAYORQUE        reduce using rule 72 (F -> ID .)
    MENORQUE        reduce using rule 72 (F -> ID .)
    ANDBIT          reduce using rule 72 (F -> ID .)
    ORBIT           reduce using rule 72 (F -> ID .)
    XORBIT          reduce using rule 72 (F -> ID .)
    SHIFTIZQ        reduce using rule 72 (F -> ID .)
    SHIFTDER        reduce using rule 72 (F -> ID .)
    PARDER          reduce using rule 72 (F -> ID .)
    PUNTOCOMA       reduce using rule 72 (F -> ID .)
    CORDER          reduce using rule 72 (F -> ID .)
    CORIZQ          shift and go to state 33

    CORCHETES                      shift and go to state 97
    CORCHETE                       shift and go to state 32

state 46

    (48) FUNCION -> ARRAY . PARIZQ PARDER

    PARIZQ          shift and go to state 98


state 47

    (35) OPERACION -> MENOS . error
    (40) OPERACION -> MENOS . F
    (71) F -> . NUMERO
    (72) F -> . ID
    (73) F -> . ID CORCHETES
    (74) F -> . CADENA
    (75) F -> . CHAR_

    error           shift and go to state 99
    NUMERO          shift and go to state 51
    ID              shift and go to state 45
    CADENA          shift and go to state 52
    CHAR_           shift and go to state 53

    F                              shift and go to state 100

state 48

    (36) OPERACION -> NOTLOGICA . error
    (41) OPERACION -> NOTLOGICA . F
    (71) F -> . NUMERO
    (72) F -> . ID
    (73) F -> . ID CORCHETES
    (74) F -> . CADENA
    (75) F -> . CHAR_

    error           shift and go to state 101
    NUMERO          shift and go to state 51
    ID              shift and go to state 45
    CADENA          shift and go to state 52
    CHAR_           shift and go to state 53

    F                              shift and go to state 102

state 49

    (37) OPERACION -> NOTBIT . error
    (42) OPERACION -> NOTBIT . F
    (71) F -> . NUMERO
    (72) F -> . ID
    (73) F -> . ID CORCHETES
    (74) F -> . CADENA
    (75) F -> . CHAR_

    error           shift and go to state 103
    NUMERO          shift and go to state 51
    ID              shift and go to state 45
    CADENA          shift and go to state 52
    CHAR_           shift and go to state 53

    F                              shift and go to state 104

state 50

    (38) OPERACION -> ANDBIT . error
    (43) OPERACION -> ANDBIT . F
    (71) F -> . NUMERO
    (72) F -> . ID
    (73) F -> . ID CORCHETES
    (74) F -> . CADENA
    (75) F -> . CHAR_

    error           shift and go to state 105
    NUMERO          shift and go to state 51
    ID              shift and go to state 45
    CADENA          shift and go to state 52
    CHAR_           shift and go to state 53

    F                              shift and go to state 106

state 51

    (71) F -> NUMERO .

    error           reduce using rule 71 (F -> NUMERO .)
    MAS             reduce using rule 71 (F -> NUMERO .)
    MENOS           reduce using rule 71 (F -> NUMERO .)
    DIV             reduce using rule 71 (F -> NUMERO .)
    POR             reduce using rule 71 (F -> NUMERO .)
    MODULO          reduce using rule 71 (F -> NUMERO .)
    AND             reduce using rule 71 (F -> NUMERO .)
    OR              reduce using rule 71 (F -> NUMERO .)
    XOR             reduce using rule 71 (F -> NUMERO .)
    IGUALQUE        reduce using rule 71 (F -> NUMERO .)
    DIFERENTE       reduce using rule 71 (F -> NUMERO .)
    MAYORIGUAL      reduce using rule 71 (F -> NUMERO .)
    MENORIGUAL      reduce using rule 71 (F -> NUMERO .)
    MAYORQUE        reduce using rule 71 (F -> NUMERO .)
    MENORQUE        reduce using rule 71 (F -> NUMERO .)
    ANDBIT          reduce using rule 71 (F -> NUMERO .)
    ORBIT           reduce using rule 71 (F -> NUMERO .)
    XORBIT          reduce using rule 71 (F -> NUMERO .)
    SHIFTIZQ        reduce using rule 71 (F -> NUMERO .)
    SHIFTDER        reduce using rule 71 (F -> NUMERO .)
    PARDER          reduce using rule 71 (F -> NUMERO .)
    PUNTOCOMA       reduce using rule 71 (F -> NUMERO .)
    CORDER          reduce using rule 71 (F -> NUMERO .)


state 52

    (74) F -> CADENA .

    error           reduce using rule 74 (F -> CADENA .)
    MAS             reduce using rule 74 (F -> CADENA .)
    MENOS           reduce using rule 74 (F -> CADENA .)
    DIV             reduce using rule 74 (F -> CADENA .)
    POR             reduce using rule 74 (F -> CADENA .)
    MODULO          reduce using rule 74 (F -> CADENA .)
    AND             reduce using rule 74 (F -> CADENA .)
    OR              reduce using rule 74 (F -> CADENA .)
    XOR             reduce using rule 74 (F -> CADENA .)
    IGUALQUE        reduce using rule 74 (F -> CADENA .)
    DIFERENTE       reduce using rule 74 (F -> CADENA .)
    MAYORIGUAL      reduce using rule 74 (F -> CADENA .)
    MENORIGUAL      reduce using rule 74 (F -> CADENA .)
    MAYORQUE        reduce using rule 74 (F -> CADENA .)
    MENORQUE        reduce using rule 74 (F -> CADENA .)
    ANDBIT          reduce using rule 74 (F -> CADENA .)
    ORBIT           reduce using rule 74 (F -> CADENA .)
    XORBIT          reduce using rule 74 (F -> CADENA .)
    SHIFTIZQ        reduce using rule 74 (F -> CADENA .)
    SHIFTDER        reduce using rule 74 (F -> CADENA .)
    PARDER          reduce using rule 74 (F -> CADENA .)
    PUNTOCOMA       reduce using rule 74 (F -> CADENA .)
    CORDER          reduce using rule 74 (F -> CADENA .)


state 53

    (75) F -> CHAR_ .

    error           reduce using rule 75 (F -> CHAR_ .)
    MAS             reduce using rule 75 (F -> CHAR_ .)
    MENOS           reduce using rule 75 (F -> CHAR_ .)
    DIV             reduce using rule 75 (F -> CHAR_ .)
    POR             reduce using rule 75 (F -> CHAR_ .)
    MODULO          reduce using rule 75 (F -> CHAR_ .)
    AND             reduce using rule 75 (F -> CHAR_ .)
    OR              reduce using rule 75 (F -> CHAR_ .)
    XOR             reduce using rule 75 (F -> CHAR_ .)
    IGUALQUE        reduce using rule 75 (F -> CHAR_ .)
    DIFERENTE       reduce using rule 75 (F -> CHAR_ .)
    MAYORIGUAL      reduce using rule 75 (F -> CHAR_ .)
    MENORIGUAL      reduce using rule 75 (F -> CHAR_ .)
    MAYORQUE        reduce using rule 75 (F -> CHAR_ .)
    MENORQUE        reduce using rule 75 (F -> CHAR_ .)
    ANDBIT          reduce using rule 75 (F -> CHAR_ .)
    ORBIT           reduce using rule 75 (F -> CHAR_ .)
    XORBIT          reduce using rule 75 (F -> CHAR_ .)
    SHIFTIZQ        reduce using rule 75 (F -> CHAR_ .)
    SHIFTDER        reduce using rule 75 (F -> CHAR_ .)
    PARDER          reduce using rule 75 (F -> CHAR_ .)
    PUNTOCOMA       reduce using rule 75 (F -> CHAR_ .)
    CORDER          reduce using rule 75 (F -> CHAR_ .)


state 54

    (12) INSTRUCCIONES -> IF PARIZQ error . PARDER GOTO LABEL PUNTOCOMA

    PARDER          shift and go to state 107


state 55

    (17) INSTRUCCIONES -> IF PARIZQ EXPRESION . PARDER GOTO LABEL PUNTOCOMA

    PARDER          shift and go to state 108


state 56

    (15) INSTRUCCIONES -> GOTO error PUNTOCOMA .

    LABEL           reduce using rule 15 (INSTRUCCIONES -> GOTO error PUNTOCOMA .)
    PRINT           reduce using rule 15 (INSTRUCCIONES -> GOTO error PUNTOCOMA .)
    IF              reduce using rule 15 (INSTRUCCIONES -> GOTO error PUNTOCOMA .)
    UNSET           reduce using rule 15 (INSTRUCCIONES -> GOTO error PUNTOCOMA .)
    EXIT            reduce using rule 15 (INSTRUCCIONES -> GOTO error PUNTOCOMA .)
    GOTO            reduce using rule 15 (INSTRUCCIONES -> GOTO error PUNTOCOMA .)
    ID              reduce using rule 15 (INSTRUCCIONES -> GOTO error PUNTOCOMA .)
    $end            reduce using rule 15 (INSTRUCCIONES -> GOTO error PUNTOCOMA .)


state 57

    (20) INSTRUCCIONES -> GOTO LABEL PUNTOCOMA .

    LABEL           reduce using rule 20 (INSTRUCCIONES -> GOTO LABEL PUNTOCOMA .)
    PRINT           reduce using rule 20 (INSTRUCCIONES -> GOTO LABEL PUNTOCOMA .)
    IF              reduce using rule 20 (INSTRUCCIONES -> GOTO LABEL PUNTOCOMA .)
    UNSET           reduce using rule 20 (INSTRUCCIONES -> GOTO LABEL PUNTOCOMA .)
    EXIT            reduce using rule 20 (INSTRUCCIONES -> GOTO LABEL PUNTOCOMA .)
    GOTO            reduce using rule 20 (INSTRUCCIONES -> GOTO LABEL PUNTOCOMA .)
    ID              reduce using rule 20 (INSTRUCCIONES -> GOTO LABEL PUNTOCOMA .)
    $end            reduce using rule 20 (INSTRUCCIONES -> GOTO LABEL PUNTOCOMA .)


state 58

    (13) INSTRUCCIONES -> UNSET PARIZQ error . PARDER PUNTOCOMA

    PARDER          shift and go to state 109


state 59

    (18) INSTRUCCIONES -> UNSET PARIZQ ID . PARDER PUNTOCOMA

    PARDER          shift and go to state 110


state 60

    (14) INSTRUCCIONES -> EXIT error PUNTOCOMA .

    LABEL           reduce using rule 14 (INSTRUCCIONES -> EXIT error PUNTOCOMA .)
    PRINT           reduce using rule 14 (INSTRUCCIONES -> EXIT error PUNTOCOMA .)
    IF              reduce using rule 14 (INSTRUCCIONES -> EXIT error PUNTOCOMA .)
    UNSET           reduce using rule 14 (INSTRUCCIONES -> EXIT error PUNTOCOMA .)
    EXIT            reduce using rule 14 (INSTRUCCIONES -> EXIT error PUNTOCOMA .)
    GOTO            reduce using rule 14 (INSTRUCCIONES -> EXIT error PUNTOCOMA .)
    ID              reduce using rule 14 (INSTRUCCIONES -> EXIT error PUNTOCOMA .)
    $end            reduce using rule 14 (INSTRUCCIONES -> EXIT error PUNTOCOMA .)


state 61

    (22) ARRAY_ -> error IGUAL . EXPRESION PUNTOCOMA
    (31) EXPRESION -> . ATOMICO
    (32) EXPRESION -> . FUNCION
    (33) EXPRESION -> . OPERACION
    (44) ATOMICO -> . F
    (45) FUNCION -> . ABS PARIZQ EXPRESION PARDER
    (46) FUNCION -> . READ PARIZQ PARDER
    (47) FUNCION -> . PARIZQ TIPO PARDER ID
    (48) FUNCION -> . ARRAY PARIZQ PARDER
    (34) OPERACION -> . F error F
    (35) OPERACION -> . MENOS error
    (36) OPERACION -> . NOTLOGICA error
    (37) OPERACION -> . NOTBIT error
    (38) OPERACION -> . ANDBIT error
    (39) OPERACION -> . F OPERADOR F
    (40) OPERACION -> . MENOS F
    (41) OPERACION -> . NOTLOGICA F
    (42) OPERACION -> . NOTBIT F
    (43) OPERACION -> . ANDBIT F
    (71) F -> . NUMERO
    (72) F -> . ID
    (73) F -> . ID CORCHETES
    (74) F -> . CADENA
    (75) F -> . CHAR_

    ABS             shift and go to state 43
    READ            shift and go to state 44
    PARIZQ          shift and go to state 36
    ARRAY           shift and go to state 46
    MENOS           shift and go to state 47
    NOTLOGICA       shift and go to state 48
    NOTBIT          shift and go to state 49
    ANDBIT          shift and go to state 50
    NUMERO          shift and go to state 51
    ID              shift and go to state 45
    CADENA          shift and go to state 52
    CHAR_           shift and go to state 53

    EXPRESION                      shift and go to state 111
    ATOMICO                        shift and go to state 39
    FUNCION                        shift and go to state 40
    OPERACION                      shift and go to state 41
    F                              shift and go to state 42

state 62

    (24) ARRAY_ -> IGUAL error . PUNTOCOMA

    PUNTOCOMA       shift and go to state 112


state 63

    (26) ARRAY_ -> IGUAL EXPRESION . PUNTOCOMA

    PUNTOCOMA       shift and go to state 113


state 64

    (23) ARRAY_ -> CORCHETES IGUAL . error PUNTOCOMA
    (25) ARRAY_ -> CORCHETES IGUAL . EXPRESION PUNTOCOMA
    (31) EXPRESION -> . ATOMICO
    (32) EXPRESION -> . FUNCION
    (33) EXPRESION -> . OPERACION
    (44) ATOMICO -> . F
    (45) FUNCION -> . ABS PARIZQ EXPRESION PARDER
    (46) FUNCION -> . READ PARIZQ PARDER
    (47) FUNCION -> . PARIZQ TIPO PARDER ID
    (48) FUNCION -> . ARRAY PARIZQ PARDER
    (34) OPERACION -> . F error F
    (35) OPERACION -> . MENOS error
    (36) OPERACION -> . NOTLOGICA error
    (37) OPERACION -> . NOTBIT error
    (38) OPERACION -> . ANDBIT error
    (39) OPERACION -> . F OPERADOR F
    (40) OPERACION -> . MENOS F
    (41) OPERACION -> . NOTLOGICA F
    (42) OPERACION -> . NOTBIT F
    (43) OPERACION -> . ANDBIT F
    (71) F -> . NUMERO
    (72) F -> . ID
    (73) F -> . ID CORCHETES
    (74) F -> . CADENA
    (75) F -> . CHAR_

    error           shift and go to state 114
    ABS             shift and go to state 43
    READ            shift and go to state 44
    PARIZQ          shift and go to state 36
    ARRAY           shift and go to state 46
    MENOS           shift and go to state 47
    NOTLOGICA       shift and go to state 48
    NOTBIT          shift and go to state 49
    ANDBIT          shift and go to state 50
    NUMERO          shift and go to state 51
    ID              shift and go to state 45
    CADENA          shift and go to state 52
    CHAR_           shift and go to state 53

    EXPRESION                      shift and go to state 115
    ATOMICO                        shift and go to state 39
    FUNCION                        shift and go to state 40
    OPERACION                      shift and go to state 41
    F                              shift and go to state 42

state 65

    (28) CORCHETES_ -> CORCHETE . CORCHETES_
    (28) CORCHETES_ -> . CORCHETE CORCHETES_
    (29) CORCHETES_ -> .
    (30) CORCHETE -> . CORIZQ F CORDER

    IGUAL           reduce using rule 29 (CORCHETES_ -> .)
    error           reduce using rule 29 (CORCHETES_ -> .)
    MAS             reduce using rule 29 (CORCHETES_ -> .)
    MENOS           reduce using rule 29 (CORCHETES_ -> .)
    DIV             reduce using rule 29 (CORCHETES_ -> .)
    POR             reduce using rule 29 (CORCHETES_ -> .)
    MODULO          reduce using rule 29 (CORCHETES_ -> .)
    AND             reduce using rule 29 (CORCHETES_ -> .)
    OR              reduce using rule 29 (CORCHETES_ -> .)
    XOR             reduce using rule 29 (CORCHETES_ -> .)
    IGUALQUE        reduce using rule 29 (CORCHETES_ -> .)
    DIFERENTE       reduce using rule 29 (CORCHETES_ -> .)
    MAYORIGUAL      reduce using rule 29 (CORCHETES_ -> .)
    MENORIGUAL      reduce using rule 29 (CORCHETES_ -> .)
    MAYORQUE        reduce using rule 29 (CORCHETES_ -> .)
    MENORQUE        reduce using rule 29 (CORCHETES_ -> .)
    ANDBIT          reduce using rule 29 (CORCHETES_ -> .)
    ORBIT           reduce using rule 29 (CORCHETES_ -> .)
    XORBIT          reduce using rule 29 (CORCHETES_ -> .)
    SHIFTIZQ        reduce using rule 29 (CORCHETES_ -> .)
    SHIFTDER        reduce using rule 29 (CORCHETES_ -> .)
    PARDER          reduce using rule 29 (CORCHETES_ -> .)
    PUNTOCOMA       reduce using rule 29 (CORCHETES_ -> .)
    CORDER          reduce using rule 29 (CORCHETES_ -> .)
    CORIZQ          shift and go to state 33

    CORCHETE                       shift and go to state 65
    CORCHETES_                     shift and go to state 116

state 66

    (27) CORCHETES -> CORCHETE CORCHETES_ .

    IGUAL           reduce using rule 27 (CORCHETES -> CORCHETE CORCHETES_ .)
    error           reduce using rule 27 (CORCHETES -> CORCHETE CORCHETES_ .)
    MAS             reduce using rule 27 (CORCHETES -> CORCHETE CORCHETES_ .)
    MENOS           reduce using rule 27 (CORCHETES -> CORCHETE CORCHETES_ .)
    DIV             reduce using rule 27 (CORCHETES -> CORCHETE CORCHETES_ .)
    POR             reduce using rule 27 (CORCHETES -> CORCHETE CORCHETES_ .)
    MODULO          reduce using rule 27 (CORCHETES -> CORCHETE CORCHETES_ .)
    AND             reduce using rule 27 (CORCHETES -> CORCHETE CORCHETES_ .)
    OR              reduce using rule 27 (CORCHETES -> CORCHETE CORCHETES_ .)
    XOR             reduce using rule 27 (CORCHETES -> CORCHETE CORCHETES_ .)
    IGUALQUE        reduce using rule 27 (CORCHETES -> CORCHETE CORCHETES_ .)
    DIFERENTE       reduce using rule 27 (CORCHETES -> CORCHETE CORCHETES_ .)
    MAYORIGUAL      reduce using rule 27 (CORCHETES -> CORCHETE CORCHETES_ .)
    MENORIGUAL      reduce using rule 27 (CORCHETES -> CORCHETE CORCHETES_ .)
    MAYORQUE        reduce using rule 27 (CORCHETES -> CORCHETE CORCHETES_ .)
    MENORQUE        reduce using rule 27 (CORCHETES -> CORCHETE CORCHETES_ .)
    ANDBIT          reduce using rule 27 (CORCHETES -> CORCHETE CORCHETES_ .)
    ORBIT           reduce using rule 27 (CORCHETES -> CORCHETE CORCHETES_ .)
    XORBIT          reduce using rule 27 (CORCHETES -> CORCHETE CORCHETES_ .)
    SHIFTIZQ        reduce using rule 27 (CORCHETES -> CORCHETE CORCHETES_ .)
    SHIFTDER        reduce using rule 27 (CORCHETES -> CORCHETE CORCHETES_ .)
    PARDER          reduce using rule 27 (CORCHETES -> CORCHETE CORCHETES_ .)
    PUNTOCOMA       reduce using rule 27 (CORCHETES -> CORCHETE CORCHETES_ .)
    CORDER          reduce using rule 27 (CORCHETES -> CORCHETE CORCHETES_ .)


state 67

    (30) CORCHETE -> CORIZQ F . CORDER

    CORDER          shift and go to state 117


state 68

    (47) FUNCION -> PARIZQ TIPO . PARDER ID

    PARDER          shift and go to state 118


state 69

    (68) TIPO -> INT .

    PARDER          reduce using rule 68 (TIPO -> INT .)


state 70

    (69) TIPO -> FLOAT .

    PARDER          reduce using rule 69 (TIPO -> FLOAT .)


state 71

    (70) TIPO -> CHAR .

    PARDER          reduce using rule 70 (TIPO -> CHAR .)


state 72

    (11) INSTRUCCIONES -> PRINT PARIZQ error PARDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 119


state 73

    (16) INSTRUCCIONES -> PRINT PARIZQ EXPRESION PARDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 120


state 74

    (34) OPERACION -> F error . F
    (71) F -> . NUMERO
    (72) F -> . ID
    (73) F -> . ID CORCHETES
    (74) F -> . CADENA
    (75) F -> . CHAR_

    NUMERO          shift and go to state 51
    ID              shift and go to state 45
    CADENA          shift and go to state 52
    CHAR_           shift and go to state 53

    F                              shift and go to state 121

state 75

    (39) OPERACION -> F OPERADOR . F
    (71) F -> . NUMERO
    (72) F -> . ID
    (73) F -> . ID CORCHETES
    (74) F -> . CADENA
    (75) F -> . CHAR_

    NUMERO          shift and go to state 51
    ID              shift and go to state 45
    CADENA          shift and go to state 52
    CHAR_           shift and go to state 53

    F                              shift and go to state 122

state 76

    (49) OPERADOR -> MAS .

    NUMERO          reduce using rule 49 (OPERADOR -> MAS .)
    ID              reduce using rule 49 (OPERADOR -> MAS .)
    CADENA          reduce using rule 49 (OPERADOR -> MAS .)
    CHAR_           reduce using rule 49 (OPERADOR -> MAS .)


state 77

    (50) OPERADOR -> MENOS .

    NUMERO          reduce using rule 50 (OPERADOR -> MENOS .)
    ID              reduce using rule 50 (OPERADOR -> MENOS .)
    CADENA          reduce using rule 50 (OPERADOR -> MENOS .)
    CHAR_           reduce using rule 50 (OPERADOR -> MENOS .)


state 78

    (51) OPERADOR -> DIV .

    NUMERO          reduce using rule 51 (OPERADOR -> DIV .)
    ID              reduce using rule 51 (OPERADOR -> DIV .)
    CADENA          reduce using rule 51 (OPERADOR -> DIV .)
    CHAR_           reduce using rule 51 (OPERADOR -> DIV .)


state 79

    (52) OPERADOR -> POR .

    NUMERO          reduce using rule 52 (OPERADOR -> POR .)
    ID              reduce using rule 52 (OPERADOR -> POR .)
    CADENA          reduce using rule 52 (OPERADOR -> POR .)
    CHAR_           reduce using rule 52 (OPERADOR -> POR .)


state 80

    (53) OPERADOR -> MODULO .

    NUMERO          reduce using rule 53 (OPERADOR -> MODULO .)
    ID              reduce using rule 53 (OPERADOR -> MODULO .)
    CADENA          reduce using rule 53 (OPERADOR -> MODULO .)
    CHAR_           reduce using rule 53 (OPERADOR -> MODULO .)


state 81

    (54) OPERADOR -> AND .

    NUMERO          reduce using rule 54 (OPERADOR -> AND .)
    ID              reduce using rule 54 (OPERADOR -> AND .)
    CADENA          reduce using rule 54 (OPERADOR -> AND .)
    CHAR_           reduce using rule 54 (OPERADOR -> AND .)


state 82

    (55) OPERADOR -> OR .

    NUMERO          reduce using rule 55 (OPERADOR -> OR .)
    ID              reduce using rule 55 (OPERADOR -> OR .)
    CADENA          reduce using rule 55 (OPERADOR -> OR .)
    CHAR_           reduce using rule 55 (OPERADOR -> OR .)


state 83

    (56) OPERADOR -> XOR .

    NUMERO          reduce using rule 56 (OPERADOR -> XOR .)
    ID              reduce using rule 56 (OPERADOR -> XOR .)
    CADENA          reduce using rule 56 (OPERADOR -> XOR .)
    CHAR_           reduce using rule 56 (OPERADOR -> XOR .)


state 84

    (57) OPERADOR -> IGUALQUE .

    NUMERO          reduce using rule 57 (OPERADOR -> IGUALQUE .)
    ID              reduce using rule 57 (OPERADOR -> IGUALQUE .)
    CADENA          reduce using rule 57 (OPERADOR -> IGUALQUE .)
    CHAR_           reduce using rule 57 (OPERADOR -> IGUALQUE .)


state 85

    (58) OPERADOR -> DIFERENTE .

    NUMERO          reduce using rule 58 (OPERADOR -> DIFERENTE .)
    ID              reduce using rule 58 (OPERADOR -> DIFERENTE .)
    CADENA          reduce using rule 58 (OPERADOR -> DIFERENTE .)
    CHAR_           reduce using rule 58 (OPERADOR -> DIFERENTE .)


state 86

    (59) OPERADOR -> MAYORIGUAL .

    NUMERO          reduce using rule 59 (OPERADOR -> MAYORIGUAL .)
    ID              reduce using rule 59 (OPERADOR -> MAYORIGUAL .)
    CADENA          reduce using rule 59 (OPERADOR -> MAYORIGUAL .)
    CHAR_           reduce using rule 59 (OPERADOR -> MAYORIGUAL .)


state 87

    (60) OPERADOR -> MENORIGUAL .

    NUMERO          reduce using rule 60 (OPERADOR -> MENORIGUAL .)
    ID              reduce using rule 60 (OPERADOR -> MENORIGUAL .)
    CADENA          reduce using rule 60 (OPERADOR -> MENORIGUAL .)
    CHAR_           reduce using rule 60 (OPERADOR -> MENORIGUAL .)


state 88

    (61) OPERADOR -> MAYORQUE .

    NUMERO          reduce using rule 61 (OPERADOR -> MAYORQUE .)
    ID              reduce using rule 61 (OPERADOR -> MAYORQUE .)
    CADENA          reduce using rule 61 (OPERADOR -> MAYORQUE .)
    CHAR_           reduce using rule 61 (OPERADOR -> MAYORQUE .)


state 89

    (62) OPERADOR -> MENORQUE .

    NUMERO          reduce using rule 62 (OPERADOR -> MENORQUE .)
    ID              reduce using rule 62 (OPERADOR -> MENORQUE .)
    CADENA          reduce using rule 62 (OPERADOR -> MENORQUE .)
    CHAR_           reduce using rule 62 (OPERADOR -> MENORQUE .)


state 90

    (63) OPERADOR -> ANDBIT .

    NUMERO          reduce using rule 63 (OPERADOR -> ANDBIT .)
    ID              reduce using rule 63 (OPERADOR -> ANDBIT .)
    CADENA          reduce using rule 63 (OPERADOR -> ANDBIT .)
    CHAR_           reduce using rule 63 (OPERADOR -> ANDBIT .)


state 91

    (64) OPERADOR -> ORBIT .

    NUMERO          reduce using rule 64 (OPERADOR -> ORBIT .)
    ID              reduce using rule 64 (OPERADOR -> ORBIT .)
    CADENA          reduce using rule 64 (OPERADOR -> ORBIT .)
    CHAR_           reduce using rule 64 (OPERADOR -> ORBIT .)


state 92

    (65) OPERADOR -> XORBIT .

    NUMERO          reduce using rule 65 (OPERADOR -> XORBIT .)
    ID              reduce using rule 65 (OPERADOR -> XORBIT .)
    CADENA          reduce using rule 65 (OPERADOR -> XORBIT .)
    CHAR_           reduce using rule 65 (OPERADOR -> XORBIT .)


state 93

    (66) OPERADOR -> SHIFTIZQ .

    NUMERO          reduce using rule 66 (OPERADOR -> SHIFTIZQ .)
    ID              reduce using rule 66 (OPERADOR -> SHIFTIZQ .)
    CADENA          reduce using rule 66 (OPERADOR -> SHIFTIZQ .)
    CHAR_           reduce using rule 66 (OPERADOR -> SHIFTIZQ .)


state 94

    (67) OPERADOR -> SHIFTDER .

    NUMERO          reduce using rule 67 (OPERADOR -> SHIFTDER .)
    ID              reduce using rule 67 (OPERADOR -> SHIFTDER .)
    CADENA          reduce using rule 67 (OPERADOR -> SHIFTDER .)
    CHAR_           reduce using rule 67 (OPERADOR -> SHIFTDER .)


state 95

    (45) FUNCION -> ABS PARIZQ . EXPRESION PARDER
    (31) EXPRESION -> . ATOMICO
    (32) EXPRESION -> . FUNCION
    (33) EXPRESION -> . OPERACION
    (44) ATOMICO -> . F
    (45) FUNCION -> . ABS PARIZQ EXPRESION PARDER
    (46) FUNCION -> . READ PARIZQ PARDER
    (47) FUNCION -> . PARIZQ TIPO PARDER ID
    (48) FUNCION -> . ARRAY PARIZQ PARDER
    (34) OPERACION -> . F error F
    (35) OPERACION -> . MENOS error
    (36) OPERACION -> . NOTLOGICA error
    (37) OPERACION -> . NOTBIT error
    (38) OPERACION -> . ANDBIT error
    (39) OPERACION -> . F OPERADOR F
    (40) OPERACION -> . MENOS F
    (41) OPERACION -> . NOTLOGICA F
    (42) OPERACION -> . NOTBIT F
    (43) OPERACION -> . ANDBIT F
    (71) F -> . NUMERO
    (72) F -> . ID
    (73) F -> . ID CORCHETES
    (74) F -> . CADENA
    (75) F -> . CHAR_

    ABS             shift and go to state 43
    READ            shift and go to state 44
    PARIZQ          shift and go to state 36
    ARRAY           shift and go to state 46
    MENOS           shift and go to state 47
    NOTLOGICA       shift and go to state 48
    NOTBIT          shift and go to state 49
    ANDBIT          shift and go to state 50
    NUMERO          shift and go to state 51
    ID              shift and go to state 45
    CADENA          shift and go to state 52
    CHAR_           shift and go to state 53

    EXPRESION                      shift and go to state 123
    ATOMICO                        shift and go to state 39
    FUNCION                        shift and go to state 40
    OPERACION                      shift and go to state 41
    F                              shift and go to state 42

state 96

    (46) FUNCION -> READ PARIZQ . PARDER

    PARDER          shift and go to state 124


state 97

    (73) F -> ID CORCHETES .

    error           reduce using rule 73 (F -> ID CORCHETES .)
    MAS             reduce using rule 73 (F -> ID CORCHETES .)
    MENOS           reduce using rule 73 (F -> ID CORCHETES .)
    DIV             reduce using rule 73 (F -> ID CORCHETES .)
    POR             reduce using rule 73 (F -> ID CORCHETES .)
    MODULO          reduce using rule 73 (F -> ID CORCHETES .)
    AND             reduce using rule 73 (F -> ID CORCHETES .)
    OR              reduce using rule 73 (F -> ID CORCHETES .)
    XOR             reduce using rule 73 (F -> ID CORCHETES .)
    IGUALQUE        reduce using rule 73 (F -> ID CORCHETES .)
    DIFERENTE       reduce using rule 73 (F -> ID CORCHETES .)
    MAYORIGUAL      reduce using rule 73 (F -> ID CORCHETES .)
    MENORIGUAL      reduce using rule 73 (F -> ID CORCHETES .)
    MAYORQUE        reduce using rule 73 (F -> ID CORCHETES .)
    MENORQUE        reduce using rule 73 (F -> ID CORCHETES .)
    ANDBIT          reduce using rule 73 (F -> ID CORCHETES .)
    ORBIT           reduce using rule 73 (F -> ID CORCHETES .)
    XORBIT          reduce using rule 73 (F -> ID CORCHETES .)
    SHIFTIZQ        reduce using rule 73 (F -> ID CORCHETES .)
    SHIFTDER        reduce using rule 73 (F -> ID CORCHETES .)
    PARDER          reduce using rule 73 (F -> ID CORCHETES .)
    PUNTOCOMA       reduce using rule 73 (F -> ID CORCHETES .)
    CORDER          reduce using rule 73 (F -> ID CORCHETES .)


state 98

    (48) FUNCION -> ARRAY PARIZQ . PARDER

    PARDER          shift and go to state 125


state 99

    (35) OPERACION -> MENOS error .

    PARDER          reduce using rule 35 (OPERACION -> MENOS error .)
    PUNTOCOMA       reduce using rule 35 (OPERACION -> MENOS error .)


state 100

    (40) OPERACION -> MENOS F .

    PARDER          reduce using rule 40 (OPERACION -> MENOS F .)
    PUNTOCOMA       reduce using rule 40 (OPERACION -> MENOS F .)


state 101

    (36) OPERACION -> NOTLOGICA error .

    PARDER          reduce using rule 36 (OPERACION -> NOTLOGICA error .)
    PUNTOCOMA       reduce using rule 36 (OPERACION -> NOTLOGICA error .)


state 102

    (41) OPERACION -> NOTLOGICA F .

    PARDER          reduce using rule 41 (OPERACION -> NOTLOGICA F .)
    PUNTOCOMA       reduce using rule 41 (OPERACION -> NOTLOGICA F .)


state 103

    (37) OPERACION -> NOTBIT error .

    PARDER          reduce using rule 37 (OPERACION -> NOTBIT error .)
    PUNTOCOMA       reduce using rule 37 (OPERACION -> NOTBIT error .)


state 104

    (42) OPERACION -> NOTBIT F .

    PARDER          reduce using rule 42 (OPERACION -> NOTBIT F .)
    PUNTOCOMA       reduce using rule 42 (OPERACION -> NOTBIT F .)


state 105

    (38) OPERACION -> ANDBIT error .

    PARDER          reduce using rule 38 (OPERACION -> ANDBIT error .)
    PUNTOCOMA       reduce using rule 38 (OPERACION -> ANDBIT error .)


state 106

    (43) OPERACION -> ANDBIT F .

    PARDER          reduce using rule 43 (OPERACION -> ANDBIT F .)
    PUNTOCOMA       reduce using rule 43 (OPERACION -> ANDBIT F .)


state 107

    (12) INSTRUCCIONES -> IF PARIZQ error PARDER . GOTO LABEL PUNTOCOMA

    GOTO            shift and go to state 126


state 108

    (17) INSTRUCCIONES -> IF PARIZQ EXPRESION PARDER . GOTO LABEL PUNTOCOMA

    GOTO            shift and go to state 127


state 109

    (13) INSTRUCCIONES -> UNSET PARIZQ error PARDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 128


state 110

    (18) INSTRUCCIONES -> UNSET PARIZQ ID PARDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 129


state 111

    (22) ARRAY_ -> error IGUAL EXPRESION . PUNTOCOMA

    PUNTOCOMA       shift and go to state 130


state 112

    (24) ARRAY_ -> IGUAL error PUNTOCOMA .

    LABEL           reduce using rule 24 (ARRAY_ -> IGUAL error PUNTOCOMA .)
    PRINT           reduce using rule 24 (ARRAY_ -> IGUAL error PUNTOCOMA .)
    IF              reduce using rule 24 (ARRAY_ -> IGUAL error PUNTOCOMA .)
    UNSET           reduce using rule 24 (ARRAY_ -> IGUAL error PUNTOCOMA .)
    EXIT            reduce using rule 24 (ARRAY_ -> IGUAL error PUNTOCOMA .)
    GOTO            reduce using rule 24 (ARRAY_ -> IGUAL error PUNTOCOMA .)
    ID              reduce using rule 24 (ARRAY_ -> IGUAL error PUNTOCOMA .)
    $end            reduce using rule 24 (ARRAY_ -> IGUAL error PUNTOCOMA .)


state 113

    (26) ARRAY_ -> IGUAL EXPRESION PUNTOCOMA .

    LABEL           reduce using rule 26 (ARRAY_ -> IGUAL EXPRESION PUNTOCOMA .)
    PRINT           reduce using rule 26 (ARRAY_ -> IGUAL EXPRESION PUNTOCOMA .)
    IF              reduce using rule 26 (ARRAY_ -> IGUAL EXPRESION PUNTOCOMA .)
    UNSET           reduce using rule 26 (ARRAY_ -> IGUAL EXPRESION PUNTOCOMA .)
    EXIT            reduce using rule 26 (ARRAY_ -> IGUAL EXPRESION PUNTOCOMA .)
    GOTO            reduce using rule 26 (ARRAY_ -> IGUAL EXPRESION PUNTOCOMA .)
    ID              reduce using rule 26 (ARRAY_ -> IGUAL EXPRESION PUNTOCOMA .)
    $end            reduce using rule 26 (ARRAY_ -> IGUAL EXPRESION PUNTOCOMA .)


state 114

    (23) ARRAY_ -> CORCHETES IGUAL error . PUNTOCOMA

    PUNTOCOMA       shift and go to state 131


state 115

    (25) ARRAY_ -> CORCHETES IGUAL EXPRESION . PUNTOCOMA

    PUNTOCOMA       shift and go to state 132


state 116

    (28) CORCHETES_ -> CORCHETE CORCHETES_ .

    IGUAL           reduce using rule 28 (CORCHETES_ -> CORCHETE CORCHETES_ .)
    error           reduce using rule 28 (CORCHETES_ -> CORCHETE CORCHETES_ .)
    MAS             reduce using rule 28 (CORCHETES_ -> CORCHETE CORCHETES_ .)
    MENOS           reduce using rule 28 (CORCHETES_ -> CORCHETE CORCHETES_ .)
    DIV             reduce using rule 28 (CORCHETES_ -> CORCHETE CORCHETES_ .)
    POR             reduce using rule 28 (CORCHETES_ -> CORCHETE CORCHETES_ .)
    MODULO          reduce using rule 28 (CORCHETES_ -> CORCHETE CORCHETES_ .)
    AND             reduce using rule 28 (CORCHETES_ -> CORCHETE CORCHETES_ .)
    OR              reduce using rule 28 (CORCHETES_ -> CORCHETE CORCHETES_ .)
    XOR             reduce using rule 28 (CORCHETES_ -> CORCHETE CORCHETES_ .)
    IGUALQUE        reduce using rule 28 (CORCHETES_ -> CORCHETE CORCHETES_ .)
    DIFERENTE       reduce using rule 28 (CORCHETES_ -> CORCHETE CORCHETES_ .)
    MAYORIGUAL      reduce using rule 28 (CORCHETES_ -> CORCHETE CORCHETES_ .)
    MENORIGUAL      reduce using rule 28 (CORCHETES_ -> CORCHETE CORCHETES_ .)
    MAYORQUE        reduce using rule 28 (CORCHETES_ -> CORCHETE CORCHETES_ .)
    MENORQUE        reduce using rule 28 (CORCHETES_ -> CORCHETE CORCHETES_ .)
    ANDBIT          reduce using rule 28 (CORCHETES_ -> CORCHETE CORCHETES_ .)
    ORBIT           reduce using rule 28 (CORCHETES_ -> CORCHETE CORCHETES_ .)
    XORBIT          reduce using rule 28 (CORCHETES_ -> CORCHETE CORCHETES_ .)
    SHIFTIZQ        reduce using rule 28 (CORCHETES_ -> CORCHETE CORCHETES_ .)
    SHIFTDER        reduce using rule 28 (CORCHETES_ -> CORCHETE CORCHETES_ .)
    PARDER          reduce using rule 28 (CORCHETES_ -> CORCHETE CORCHETES_ .)
    PUNTOCOMA       reduce using rule 28 (CORCHETES_ -> CORCHETE CORCHETES_ .)
    CORDER          reduce using rule 28 (CORCHETES_ -> CORCHETE CORCHETES_ .)


state 117

    (30) CORCHETE -> CORIZQ F CORDER .

    CORIZQ          reduce using rule 30 (CORCHETE -> CORIZQ F CORDER .)
    IGUAL           reduce using rule 30 (CORCHETE -> CORIZQ F CORDER .)
    error           reduce using rule 30 (CORCHETE -> CORIZQ F CORDER .)
    MAS             reduce using rule 30 (CORCHETE -> CORIZQ F CORDER .)
    MENOS           reduce using rule 30 (CORCHETE -> CORIZQ F CORDER .)
    DIV             reduce using rule 30 (CORCHETE -> CORIZQ F CORDER .)
    POR             reduce using rule 30 (CORCHETE -> CORIZQ F CORDER .)
    MODULO          reduce using rule 30 (CORCHETE -> CORIZQ F CORDER .)
    AND             reduce using rule 30 (CORCHETE -> CORIZQ F CORDER .)
    OR              reduce using rule 30 (CORCHETE -> CORIZQ F CORDER .)
    XOR             reduce using rule 30 (CORCHETE -> CORIZQ F CORDER .)
    IGUALQUE        reduce using rule 30 (CORCHETE -> CORIZQ F CORDER .)
    DIFERENTE       reduce using rule 30 (CORCHETE -> CORIZQ F CORDER .)
    MAYORIGUAL      reduce using rule 30 (CORCHETE -> CORIZQ F CORDER .)
    MENORIGUAL      reduce using rule 30 (CORCHETE -> CORIZQ F CORDER .)
    MAYORQUE        reduce using rule 30 (CORCHETE -> CORIZQ F CORDER .)
    MENORQUE        reduce using rule 30 (CORCHETE -> CORIZQ F CORDER .)
    ANDBIT          reduce using rule 30 (CORCHETE -> CORIZQ F CORDER .)
    ORBIT           reduce using rule 30 (CORCHETE -> CORIZQ F CORDER .)
    XORBIT          reduce using rule 30 (CORCHETE -> CORIZQ F CORDER .)
    SHIFTIZQ        reduce using rule 30 (CORCHETE -> CORIZQ F CORDER .)
    SHIFTDER        reduce using rule 30 (CORCHETE -> CORIZQ F CORDER .)
    PARDER          reduce using rule 30 (CORCHETE -> CORIZQ F CORDER .)
    PUNTOCOMA       reduce using rule 30 (CORCHETE -> CORIZQ F CORDER .)
    CORDER          reduce using rule 30 (CORCHETE -> CORIZQ F CORDER .)


state 118

    (47) FUNCION -> PARIZQ TIPO PARDER . ID

    ID              shift and go to state 133


state 119

    (11) INSTRUCCIONES -> PRINT PARIZQ error PARDER PUNTOCOMA .

    LABEL           reduce using rule 11 (INSTRUCCIONES -> PRINT PARIZQ error PARDER PUNTOCOMA .)
    PRINT           reduce using rule 11 (INSTRUCCIONES -> PRINT PARIZQ error PARDER PUNTOCOMA .)
    IF              reduce using rule 11 (INSTRUCCIONES -> PRINT PARIZQ error PARDER PUNTOCOMA .)
    UNSET           reduce using rule 11 (INSTRUCCIONES -> PRINT PARIZQ error PARDER PUNTOCOMA .)
    EXIT            reduce using rule 11 (INSTRUCCIONES -> PRINT PARIZQ error PARDER PUNTOCOMA .)
    GOTO            reduce using rule 11 (INSTRUCCIONES -> PRINT PARIZQ error PARDER PUNTOCOMA .)
    ID              reduce using rule 11 (INSTRUCCIONES -> PRINT PARIZQ error PARDER PUNTOCOMA .)
    $end            reduce using rule 11 (INSTRUCCIONES -> PRINT PARIZQ error PARDER PUNTOCOMA .)


state 120

    (16) INSTRUCCIONES -> PRINT PARIZQ EXPRESION PARDER PUNTOCOMA .

    LABEL           reduce using rule 16 (INSTRUCCIONES -> PRINT PARIZQ EXPRESION PARDER PUNTOCOMA .)
    PRINT           reduce using rule 16 (INSTRUCCIONES -> PRINT PARIZQ EXPRESION PARDER PUNTOCOMA .)
    IF              reduce using rule 16 (INSTRUCCIONES -> PRINT PARIZQ EXPRESION PARDER PUNTOCOMA .)
    UNSET           reduce using rule 16 (INSTRUCCIONES -> PRINT PARIZQ EXPRESION PARDER PUNTOCOMA .)
    EXIT            reduce using rule 16 (INSTRUCCIONES -> PRINT PARIZQ EXPRESION PARDER PUNTOCOMA .)
    GOTO            reduce using rule 16 (INSTRUCCIONES -> PRINT PARIZQ EXPRESION PARDER PUNTOCOMA .)
    ID              reduce using rule 16 (INSTRUCCIONES -> PRINT PARIZQ EXPRESION PARDER PUNTOCOMA .)
    $end            reduce using rule 16 (INSTRUCCIONES -> PRINT PARIZQ EXPRESION PARDER PUNTOCOMA .)


state 121

    (34) OPERACION -> F error F .

    PARDER          reduce using rule 34 (OPERACION -> F error F .)
    PUNTOCOMA       reduce using rule 34 (OPERACION -> F error F .)


state 122

    (39) OPERACION -> F OPERADOR F .

    PARDER          reduce using rule 39 (OPERACION -> F OPERADOR F .)
    PUNTOCOMA       reduce using rule 39 (OPERACION -> F OPERADOR F .)


state 123

    (45) FUNCION -> ABS PARIZQ EXPRESION . PARDER

    PARDER          shift and go to state 134


state 124

    (46) FUNCION -> READ PARIZQ PARDER .

    PARDER          reduce using rule 46 (FUNCION -> READ PARIZQ PARDER .)
    PUNTOCOMA       reduce using rule 46 (FUNCION -> READ PARIZQ PARDER .)


state 125

    (48) FUNCION -> ARRAY PARIZQ PARDER .

    PARDER          reduce using rule 48 (FUNCION -> ARRAY PARIZQ PARDER .)
    PUNTOCOMA       reduce using rule 48 (FUNCION -> ARRAY PARIZQ PARDER .)


state 126

    (12) INSTRUCCIONES -> IF PARIZQ error PARDER GOTO . LABEL PUNTOCOMA

    LABEL           shift and go to state 135


state 127

    (17) INSTRUCCIONES -> IF PARIZQ EXPRESION PARDER GOTO . LABEL PUNTOCOMA

    LABEL           shift and go to state 136


state 128

    (13) INSTRUCCIONES -> UNSET PARIZQ error PARDER PUNTOCOMA .

    LABEL           reduce using rule 13 (INSTRUCCIONES -> UNSET PARIZQ error PARDER PUNTOCOMA .)
    PRINT           reduce using rule 13 (INSTRUCCIONES -> UNSET PARIZQ error PARDER PUNTOCOMA .)
    IF              reduce using rule 13 (INSTRUCCIONES -> UNSET PARIZQ error PARDER PUNTOCOMA .)
    UNSET           reduce using rule 13 (INSTRUCCIONES -> UNSET PARIZQ error PARDER PUNTOCOMA .)
    EXIT            reduce using rule 13 (INSTRUCCIONES -> UNSET PARIZQ error PARDER PUNTOCOMA .)
    GOTO            reduce using rule 13 (INSTRUCCIONES -> UNSET PARIZQ error PARDER PUNTOCOMA .)
    ID              reduce using rule 13 (INSTRUCCIONES -> UNSET PARIZQ error PARDER PUNTOCOMA .)
    $end            reduce using rule 13 (INSTRUCCIONES -> UNSET PARIZQ error PARDER PUNTOCOMA .)


state 129

    (18) INSTRUCCIONES -> UNSET PARIZQ ID PARDER PUNTOCOMA .

    LABEL           reduce using rule 18 (INSTRUCCIONES -> UNSET PARIZQ ID PARDER PUNTOCOMA .)
    PRINT           reduce using rule 18 (INSTRUCCIONES -> UNSET PARIZQ ID PARDER PUNTOCOMA .)
    IF              reduce using rule 18 (INSTRUCCIONES -> UNSET PARIZQ ID PARDER PUNTOCOMA .)
    UNSET           reduce using rule 18 (INSTRUCCIONES -> UNSET PARIZQ ID PARDER PUNTOCOMA .)
    EXIT            reduce using rule 18 (INSTRUCCIONES -> UNSET PARIZQ ID PARDER PUNTOCOMA .)
    GOTO            reduce using rule 18 (INSTRUCCIONES -> UNSET PARIZQ ID PARDER PUNTOCOMA .)
    ID              reduce using rule 18 (INSTRUCCIONES -> UNSET PARIZQ ID PARDER PUNTOCOMA .)
    $end            reduce using rule 18 (INSTRUCCIONES -> UNSET PARIZQ ID PARDER PUNTOCOMA .)


state 130

    (22) ARRAY_ -> error IGUAL EXPRESION PUNTOCOMA .

    LABEL           reduce using rule 22 (ARRAY_ -> error IGUAL EXPRESION PUNTOCOMA .)
    PRINT           reduce using rule 22 (ARRAY_ -> error IGUAL EXPRESION PUNTOCOMA .)
    IF              reduce using rule 22 (ARRAY_ -> error IGUAL EXPRESION PUNTOCOMA .)
    UNSET           reduce using rule 22 (ARRAY_ -> error IGUAL EXPRESION PUNTOCOMA .)
    EXIT            reduce using rule 22 (ARRAY_ -> error IGUAL EXPRESION PUNTOCOMA .)
    GOTO            reduce using rule 22 (ARRAY_ -> error IGUAL EXPRESION PUNTOCOMA .)
    ID              reduce using rule 22 (ARRAY_ -> error IGUAL EXPRESION PUNTOCOMA .)
    $end            reduce using rule 22 (ARRAY_ -> error IGUAL EXPRESION PUNTOCOMA .)


state 131

    (23) ARRAY_ -> CORCHETES IGUAL error PUNTOCOMA .

    LABEL           reduce using rule 23 (ARRAY_ -> CORCHETES IGUAL error PUNTOCOMA .)
    PRINT           reduce using rule 23 (ARRAY_ -> CORCHETES IGUAL error PUNTOCOMA .)
    IF              reduce using rule 23 (ARRAY_ -> CORCHETES IGUAL error PUNTOCOMA .)
    UNSET           reduce using rule 23 (ARRAY_ -> CORCHETES IGUAL error PUNTOCOMA .)
    EXIT            reduce using rule 23 (ARRAY_ -> CORCHETES IGUAL error PUNTOCOMA .)
    GOTO            reduce using rule 23 (ARRAY_ -> CORCHETES IGUAL error PUNTOCOMA .)
    ID              reduce using rule 23 (ARRAY_ -> CORCHETES IGUAL error PUNTOCOMA .)
    $end            reduce using rule 23 (ARRAY_ -> CORCHETES IGUAL error PUNTOCOMA .)


state 132

    (25) ARRAY_ -> CORCHETES IGUAL EXPRESION PUNTOCOMA .

    LABEL           reduce using rule 25 (ARRAY_ -> CORCHETES IGUAL EXPRESION PUNTOCOMA .)
    PRINT           reduce using rule 25 (ARRAY_ -> CORCHETES IGUAL EXPRESION PUNTOCOMA .)
    IF              reduce using rule 25 (ARRAY_ -> CORCHETES IGUAL EXPRESION PUNTOCOMA .)
    UNSET           reduce using rule 25 (ARRAY_ -> CORCHETES IGUAL EXPRESION PUNTOCOMA .)
    EXIT            reduce using rule 25 (ARRAY_ -> CORCHETES IGUAL EXPRESION PUNTOCOMA .)
    GOTO            reduce using rule 25 (ARRAY_ -> CORCHETES IGUAL EXPRESION PUNTOCOMA .)
    ID              reduce using rule 25 (ARRAY_ -> CORCHETES IGUAL EXPRESION PUNTOCOMA .)
    $end            reduce using rule 25 (ARRAY_ -> CORCHETES IGUAL EXPRESION PUNTOCOMA .)


state 133

    (47) FUNCION -> PARIZQ TIPO PARDER ID .

    PARDER          reduce using rule 47 (FUNCION -> PARIZQ TIPO PARDER ID .)
    PUNTOCOMA       reduce using rule 47 (FUNCION -> PARIZQ TIPO PARDER ID .)


state 134

    (45) FUNCION -> ABS PARIZQ EXPRESION PARDER .

    PARDER          reduce using rule 45 (FUNCION -> ABS PARIZQ EXPRESION PARDER .)
    PUNTOCOMA       reduce using rule 45 (FUNCION -> ABS PARIZQ EXPRESION PARDER .)


state 135

    (12) INSTRUCCIONES -> IF PARIZQ error PARDER GOTO LABEL . PUNTOCOMA

    PUNTOCOMA       shift and go to state 137


state 136

    (17) INSTRUCCIONES -> IF PARIZQ EXPRESION PARDER GOTO LABEL . PUNTOCOMA

    PUNTOCOMA       shift and go to state 138


state 137

    (12) INSTRUCCIONES -> IF PARIZQ error PARDER GOTO LABEL PUNTOCOMA .

    LABEL           reduce using rule 12 (INSTRUCCIONES -> IF PARIZQ error PARDER GOTO LABEL PUNTOCOMA .)
    PRINT           reduce using rule 12 (INSTRUCCIONES -> IF PARIZQ error PARDER GOTO LABEL PUNTOCOMA .)
    IF              reduce using rule 12 (INSTRUCCIONES -> IF PARIZQ error PARDER GOTO LABEL PUNTOCOMA .)
    UNSET           reduce using rule 12 (INSTRUCCIONES -> IF PARIZQ error PARDER GOTO LABEL PUNTOCOMA .)
    EXIT            reduce using rule 12 (INSTRUCCIONES -> IF PARIZQ error PARDER GOTO LABEL PUNTOCOMA .)
    GOTO            reduce using rule 12 (INSTRUCCIONES -> IF PARIZQ error PARDER GOTO LABEL PUNTOCOMA .)
    ID              reduce using rule 12 (INSTRUCCIONES -> IF PARIZQ error PARDER GOTO LABEL PUNTOCOMA .)
    $end            reduce using rule 12 (INSTRUCCIONES -> IF PARIZQ error PARDER GOTO LABEL PUNTOCOMA .)


state 138

    (17) INSTRUCCIONES -> IF PARIZQ EXPRESION PARDER GOTO LABEL PUNTOCOMA .

    LABEL           reduce using rule 17 (INSTRUCCIONES -> IF PARIZQ EXPRESION PARDER GOTO LABEL PUNTOCOMA .)
    PRINT           reduce using rule 17 (INSTRUCCIONES -> IF PARIZQ EXPRESION PARDER GOTO LABEL PUNTOCOMA .)
    IF              reduce using rule 17 (INSTRUCCIONES -> IF PARIZQ EXPRESION PARDER GOTO LABEL PUNTOCOMA .)
    UNSET           reduce using rule 17 (INSTRUCCIONES -> IF PARIZQ EXPRESION PARDER GOTO LABEL PUNTOCOMA .)
    EXIT            reduce using rule 17 (INSTRUCCIONES -> IF PARIZQ EXPRESION PARDER GOTO LABEL PUNTOCOMA .)
    GOTO            reduce using rule 17 (INSTRUCCIONES -> IF PARIZQ EXPRESION PARDER GOTO LABEL PUNTOCOMA .)
    ID              reduce using rule 17 (INSTRUCCIONES -> IF PARIZQ EXPRESION PARDER GOTO LABEL PUNTOCOMA .)
    $end            reduce using rule 17 (INSTRUCCIONES -> IF PARIZQ EXPRESION PARDER GOTO LABEL PUNTOCOMA .)

